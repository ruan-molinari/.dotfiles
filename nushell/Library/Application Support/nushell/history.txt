clear
nvim
cargo test
clear
cd ..
cd ~
clear
cd workspace/rust/advent-of-code/
cd day-01/
clear
cargo test
clear
cargo test
ear
clear
cargo test
clear
cargo test
nvim
clear
cargo test
clear
cargo test
cargo run
rustc run
clear
cargo run --bin
cargo run --bin part-1
cargo run --bin part-2
clear
cd ~
cd workspace/weknow/clientapps/webclient/ng2+/
cd ~
cd workspace/weknow/clientapps/webclient/ng2+/
clear
fnm exec --using=18 npm run serve
clea
clear
nvim
git checkout main
clear
pe
clear
fnm exec --using=18 npm run serve
clear
cd ~
cd .config/
cd nushell/
ls
nvim
cd ~
ls
cd workspace/
mkdir python
cd python/
pyenv
pip
clear
cd ~
clear
cd .config/nushell/
nvim
clear
clear
pyenv
pyenv --help
clear
cd workspace/weknow/clientapps/webclient/ng2+/
clear
cd workspace/weknow/clientapps/webclient/ng2+/
clear
cd .config/kit
clear
cd workspace/weknow/clientapps/webclient/ng2+/
cd ~
cd .config/kitty/
clear
ls
cd workspace/weknow/clientapps/webclient/ng2+/
clear
fnm exec --using=18 npm run serve
clear
git pull
clear
git checkout 3.3
git pull
git checkout main
clear
git checkout -b WM-3528
clear
cd .config/nvim
nvim
nvim
clear
nvim
cd .config/kit
nvim
clear
cd workspace/weknow/clientapps/webclient/ng2+/
clear
nvim
cd .config/kit
c;ear
clear
cd workspace/weknow/clientapps/webclient/ng2+/
clear
cd .config/kit
nvim
cd workspace/weknow/clientapps/webclient/ng2+/
nvim
cd ~
cd .config/kit
nvim
clear
cd ..
cd nvim/
nvim
clear
cd ~
cd workspace/weknow/clientapps/webclient/ng2+/
clear
.config/kitt
cd .config/kit
nvim
clear
:q
cd workspace/weknow/clientapps/webclient/ng2+/
clear
clear
nvim
fnm exec --using=18 npm run serve
clear
fnm exec --using=18 npm run serve
clear
fnm exec --using=18 npm run serve
clear
cd .config/nvim
nvim
cd ..
cd nushell/
clear
nvim
cd ..
cd ~
cd .config/nvim
clear
nvim
cd ..
cd nushell/
clear
fnm
fnm env
fnm use 18
fnm
fnm install nest
node
npm
node -V
node -v
clear
npm install nest
clear
yarn
clear
ls
cd workspace/
ls
mkdir nest
cd nest/
clear
nest new nestjs-api-tutorial
npm install nest
nest new nestjs-api-tutorial
npm -h
npm run nest
npm view
clear
npm -h
npm -l
npm -h
clear
fnm
fnm alias
clear
fnm env
fnm env bash
fnm env -h
fnm env --json
fnm env --shell bash
fnm
fbn default 18
fnm default 18
fnm env --shell bash
fnm list --shell bash
fnm list -h
fnm list
fnm list --fnm-dir
fnm -h
fnm current
fnm current -h
fnm --fnm-dir
fnm env --shell bash
fnm list -h
fnm list --json
fnm env --shell bash
node -h
clear
npm -h
npm bin
npm exec nest
npm pkg
npm root
npm view
clear
npm -h
npm ls
yarn
yarn install nest
yarn add nest
nest
yarn -h
yarn exec nest
yarn run nest
cd ~
;s
clear
ls
cd node_modules/
ls
nest
cd nest/
ls
cd ..
./nest
ls -a
cd ..
clear
ls -a
node nest
node -h
node inspect nest
clear
ls
ls -a
cd .npm
ls
ls -a
cd ..
ls
lclear
clear
ls -a
cd .local/
ls
ls -a
cd ..
cd /usr/local/lib
cd /usr/local
ls
cd bin
ls
cd ~
clear
cd ..
ls
cd ~
ls
rm node_modules/
rm -r -f -v node_modules/
ls
clear
npm install -g nest
nest
clear
npm exec nest
clear
cd /usr/local
ls
cd ~
npm -h
ls
fnm env --shell bash
cd .fnm
ls
cd aliases/
ls
cd ..
ls
cd node-versions/
ls
cd v18.13.0/
ls
cd installation/
clear
ls
cd lib/
ls
cd node_modules/
ls
cd npm/
ls
cd lib/
ls
cd workspaces/
ls
clear
cd ~
clear
fnm env --shell bash
fnm env --json | FNM_MULTISHELL_PATH
fnm env --json | cd FNM_MULTISHELL_PATH
cd /Users/ruan/Library/Caches/fnm_multishells/29744_1679349072426
ls
cd lib/
ls
cd node_modules/
ls
cd nest
ls
cd .
cd ..
ls
..
ls
clear
cd ..
cd ~
clear
cd .config/nushell
nvim
load-env (fnm env --shell bash | lines | str replace 'export ' '' | str replace -a '"' '' | split column = | rename name value | where name != "FNM_ARCH" && name != "PATH" | reduce -f {} {|it, acc| $acc | upsert $it.name $it.value })
PATH
env
clear
nu
nest
npm -h
clear
$PATH
env.$PATH
env.PATH
cd ~
clear
ls
ls -a
nvim .fnmrc
cd .fnm
ls
npm bin
npm -g bin
ls
cd ~
ls
npm bin
fnm bin
ls
pwd
npm-exec which nest
npm exec which nest
clear
npm exec nest
npm install -g nest
npm -h
npm explain
npm explore
clear
cd ..
cd ~
cd .config
cd nvim
ls
nvim
cd ..
cd nu
ls
nvim
nest
nvim
clear
node bin
clear
npm bin
ls
fnm
fnm current
fnm env
fnm env --shell bash
cd Library/Caches/fnm_multishells/
ls
cd ..
clear
fnm env --shell bash
cd .fnm
ls
ls -a
cd ~
cd .fnm
ls
ls -a
cd aliases/
ls -a
cd default/
ls
ls -a
cd bin
ls
cd ..
ls
cd include/
ls
ls -a
cd ..
cd lib/
ls
ls -a
cd node_modules/
ls
ls -a
cd nest
ls
ls -a
cd ..
ls
./nest/
ls
indent 
./index.js
cd ..
ls
cd ..
ls
cd dtrace/
ls
cd ..
ls
cd ..
ls
cd share/
ls
cd doc
ls
ls -a
cd node/
ls
ls -a
cd ..
.
ls
..
ls
ls -a
..
ls
ls -a
cd bin
ls
cd ..
clear
ls
cd ..
ls
..
ls
ls -a
cd .downloads/
;s
ls
ls -a
cd ..
ls
..
ls
..
ls
cd .fm,
cd .fnm
clear
cd ..
ls -a
rm .node_repl_history
cd .npm
ls
ls -a
cd _cacache/
ls
cd ..
ls
ls -a
.config
ls
nushell/
cd nushell/
ls
clear
cd aa
clear
cd .config
ls
jest
fnm use 18 nest
fnm use nest 18
fnm use nest
clear
env
clear
yarn install nest
yarn -h
yarn run nest
yarn add nest
yarn run nest
yarn remove nest
npm uninstall nest
npm install -g @nest/cli
npm install -g @nestjs/cli
cd ,,
cd ..
ls
cd workspace/nest/
ls
clear
nest new nestjs-api-tutorial
clear
nvim
clear
cd ~
cd workspace/weknow/clientapps/webclient/ng2+/
clear
nvim
cd .config/nvim
clear
nvim
clear
cd ~
cd wo
cd ..
cd .config/
fnmcd 
cd nushell/
ls
nvim
cd .config/kit
cd .config/kitty/
ls
cd .config
cd
.config
nushell
ls
cd
ls
cd
clear
cd workspace/weknow/clientapps/webclient/ng2+/
nvim .config/nushell
cd
cd .config/
.config
ls
cd ..
ls
cd ..
clear
cd ~
~
clear
ls
clear
ls -a
.config
nushell
cd .config
clear
cd ~
cd workspace/weknow/clientapps/webclient/ng2+/
clear
npm run servev
clear
cd .config
ls
cd nvim
ls
nvim
nvim
npm i -g eslint
eslint -h 
eslint --fix ./src/ng1App/services/hotjarService.js
clear
npm run build
clear
git add ,
clear
git add .
git commit -m "- WM-3528: Implementação do Hotjar para coleta de feedback e informações sobre a interação dos usuários com a aplicação;"
git commit --amend -e
rm dist.zip
git commit --amend -e
git add .
git commit --amend -e
git push
git add .
git commit -m "#ignorar# ajustando posicionamento do widget do movidesk para não dar overlap;"
git push
git checkout main
git merge WM-3508
git checkout main
git merge --abort
git reset --hard
git clean -d -f
git checkout main
git merge WM-3528
git reset --hard
git clean -d -f
clear
git merge --abort
git reset --hard HEAD~1
git reset --merge ORIG_HEAD
git reset --hard ORIG_HEAD
ls
git status
git revert
git checkout origin/main
git checkout main
git reset --hard HEAD~1
git fetch
git reset --hard HEAD~1
git pull
git checkout WM-3528
git clean -d -f
git fetch
git rebase main
git pull
git reset --hard HEAD~1
git branch -h
git branch -d
git checkout main
git branch -d WM-3528
git branch -D WM-3528
git pull origin WM-3528
git reset --hard HEAD~1
git fetch
git checkout --track origin/WM-3528
git pull
npm run serve
clear
git checkout main
git cherry-pick -x 20ce6da
git cherry-pick -x 6dae293
git push
git checkout 3.3
git cherry-pick -x 20ce6da
git push
git cherry-pick -x 6dae293
git push
npm run serve
clear
cd ~/workspace/
ls
cd nest
ls
cd nestjs-api-tutorial/
ls
clear
nvim
ls
nest g module user
nest g module bookmark
brew install docker
clear
docker compose up dev-db -d
yarn start:dev
clear
docker compose up dev-db
docker -h
clear
docker -h
docker compose up dev-db
docker -v
brew install docker-compse
clear
brew install docker-compose
docker compose up dev-db
docker-compose up dev-db
docker-compose
docker-compose up
docker-compose up dev-db -d
clear
docker-compose up dev-db -d
docker-compose up dev-db
docker-machine
clear
brew install docker-machine
docker-machine start
docker-machine
docker-machine create nest
brew cask install virtualbox
brew install --cask virtualbox
yarn start:dev
clear
cd ~
cd workspace/weknow/clientapps/webclient/ng2+/
clear
git checkout 3.2
git pull
git cherry-pick -x 20ce6da
git cherry-pick -x 6dae293
git cherry-pick --continue
git add .
git cherry-pick --continue
git push
git checkout 3.1
git pul
git pull
git cherry-pick -x 20ce6da
nvim
cd ..
ls
cd www
ls
git reset --hard HEAD~1
git clean -d -f
git pull
clear
git fetch
nvim
git checkout main
git branch -d 3.1
git branch -D 3.1
git fetch origin
git switch 3.1
cd ..
cd ng2+/
;s
clear
ls
cd src
ls
cd data/
ls
cd ..
clear
clear
npm run serve
cd ..
cd www
npm run serve
git add .
git commit -m "- WM-3528: Implementação do Hotjar para coleta de feedback e informações sobre a interação dos usuários com a aplicação;"
git push
clear
ce ~
cd ~
clear
cd workspace/weknow/clientapps/webclient/ng2+/
clear
git checkout min
git checkout main
clear
git checkout WM-3508
clear
nvim
git fetch
clear
nvim
clear
ls
cd workspace/weknow/clientapps/webclient/ng2+/
clear
git add .
git commit -m "- WM-3508: Correção de bug nas novas fórmulas para números com notação científica;"
git checkout main
git pull
git cherry-pick -x 45fd2084
git add .
git cherry-pick continue
git cherry-pick --continue
git push
git checkout 3.3
git cherry-pick 925620238
git push
git pull
git reset --hard
git clean -d -f
git reset --hard HEAD~1
git reset --hard 3.3
clear
git reset --hard
git clean -d -f
clear
git pull
git add .
git checkout main
git branch -D 3.3
git pull -b 3.3
git switch 3.3
clear
git cherry-pick 925620238
git push
clear
npm run serve
clear
nvim
cd ~
clear
cd workspace/nest/
ls
cd nestjs-api-tutorial/
clear
docker-compose up dev-db -d
sudo docker-compose up dev-db -d
systemctl start docker
docker-compose
docker
docker ps
brew uninstall docker
bre install --cask docker
brew install --cask docker
brew install colima
colima start
brew install docker
colima start
clear
nvim
cd workspace/weknow/clientapps/webclient/ng2+/
clear
npm run serve
cd main
clear
git checkout main
clear
fnm exec --using=18 npm run serve
clear
git checkout 3.3
clear
git fetch
git pull
cd workspace/weknow/clientapps/webclient/ng2+/
clear
clear
ls
rm -r -f -v node_modules/
fnm exec --using=18 npm run serve
clear
npm i
clear
git checkout main
git pull
clear
git add ,
git add .
git commit -m "#ignorar# havia mais um lugar onde o formato da notação estava causando erro;"
git push
git checkout 3.3
git cherry-pick -x 5db17fd65
clear
git push
clear
git checkout main
clear
git checkout -b WD-1729
clear
nvim
clear
nvim
clear
nvim
cd Documents/
ls
nvim finances.beancount
npm run serve
clear
nvim
cd workspace/
ls
cd pyt
ls
clear
ls
mkdir pontobot
cd pontobot
pyenv
cd ~
clear
ls
cd .config
ls
cd nushell
ls
cd workspace/
ls
cd python/
cd pontobot/
clear
pyenv
pyenv -h
pyenv version
pyenv --version
clear
pip
py
python
clear
csh
python
py
conda
brew install python@3.11
python
python@3.11
py
conda
pyenv versiobs
pyenv versions
cd ~
cd .pyenv
ls
cd versions
ls
cd 3.11.1/
ls
pyenv shell 3.11.1
pyenv activate
pyenv activate 3.11.1
npm run serve
clear
nvim
git add .
git commit -m "- WD-1729: Implementação das novas políticas de segurança no frontend"
git push
clear
ls
git rm \\
ls
clear
git fetch
git pull
clear
nvim
nnvim
nvim
clear
git switch WP-1548y
clear
git switch WP-1548y
git checkout main
git reset --hard
git clean -d -f
clear
git switch WP-1548y
git checkout main
git pull
git reset --hard
git clean -d -f
git pull
git add *
git stash
git pull
git add .
git stash
git pull
clear
git add*
git clean -d -f .
git clean -d -f ""
git clean -d -f "."
git pull
clear
git pull
clear
git checkout -b WD-1729b
git cherry-pick -x 107bb66
ls
git rm \
git rm \ -f
ls
git add .
git commit -m "- WD-1729: Implementação das novas políticas de segurança no frontend"
git add . 
git commit -m "#ignorar#"
git push
git -D WD-1729
git add .
git commit -m "#ignorar# corrigindo solicitações do code review"
git push
git add .
git commit -m "#ignorar# limpando código"
git push
git add .
git commit -m "#ignorar#"
git push
git add .
git commit -m "#ignorar# corrigindo solicitações do code review"
git push
git stash
git checkout main
git pull
git checkout -b WM-3583
git pop
git stash pop
git add .
nvim
git commit -m "- WM-3583: Corrigindo erro na exportação de componentes;"
      git push
git checkout main
git merge WM-3583
git push
git checkout WM-3584
git checkout WM-3583
git commit -m "- WM-3583: Corrigindo erro na exportação de componentes;"
git add .
git commit -m "- WM-3583: Corrigindo erro na exportação de componentes;"
git push
git checkout main
git merge WM-3583
git push
git pull
git clean -d -f
git reset --hard
git revert
git merge --abort
git commit --abort
git revert --abort
git reset --hard HEAD~1
git pull
git reset --hard HEAD~1
git clean -d -f
git reset --hard HEAD~1
npm install
node -v
clear
npm run serve
clear
npm run serve
npm install
ls
rm -r -f -v node_modules/
clear
npm install
rm -r -f -v node_modules/
npm install
NODE_OPTIONS=--openssl-legacy-provider
export NODE_OPTIONS=--openssl-legacy-provider
npm install
cd node_modules/
rm -r -f -v ace-builds
rm -r -f -v .ace-builds-KEJ3MiRd/
npm i
rm -r -f -v node_modules/
clear
node options
clear
cd .confi
ls
cd nushell/
ls
clear
cd ..
clear
rm -r -f -v node_modules/
npm i
clear
git checkout WD-1729
git clean -d -f
git reset --hard HEAD~1
git clean -d -f
git checkout WD-1729
npm run serve
clear
git fetch
git checkout WD-1729b
clear
git checkout main
git add .
git commit -m "#ignorar# corrigindo ultimos commits;"
git add .
git push
git pull
clear
git reset --hard HEAD~1
git clean -d -f
git pull
git add .
git commit -m "#ignorar# corrigindo ultimos commits;"
git push
git pull
git switch 4.0
git cherry-pick -x bfa4f40
git add .
git commit -m "- WM-3583: Corrigindo erro na exportação de componentes;"
git push
npm run serve
clear
npm run build
ls
zip dist.zip
ls
zip 
zip -h
zip -r dist.zip dist
tar
tar -c -z -f dist.zip -C ./dist ./
ls
dist.zip
./dist.zip
ls
cd Documents/
ls
ng
npm i -g @angular/cli
ng
ng new ailos_teste
ls
cd ..
ls
cd Documents/
mv ailos_teste/ ../workspace/ailos_teste
ls
cd ..
cd workspace/
ls
cd ailos_teste/
ls
clear
npm run serve
npm run server
ng add @angular/material
ng g app-shell
nvim
npm run ngcc
ls
cd workspace/
ls
cd ailos_teste/
lsls
ls
clear
npm run server
ng generate @angular/material:material-nav --name sidenav
ng generate @angular/material:material-nav --name app-shell
ng g @schematics/angular:component admission --skip-selector
ng g @schematics/angular:component admission/start
ng g @schematics/angular:module admission/
cd workspace/
ls
ng new angular-unit-testing
ls
rm -r -f -v angular-unit-testing/
ls
clear
git clone https://github.com/bbachi/angular-unit-testing.git
cd angular-unit-testing/
npm i
npm start
clear
sudo softwareupdate --install-rosetta --agree-to-license
ls
clear
ls
mkdir development
cd development/
cd
ls
cd Downloads/
ls
ls -a
lsa
cd ..
ls
rm -r -f -v Exercism/
cd Library/
ls
clear
cd ..
ls
cd Documents/
ls
cd ..
cd Desktop/
ls
cd ..
ls
cd ..
cd ruan/
cd Downloads/
ls
clear
ls -a
ls
cd Downloads/
ls
ls -a
cd ..
clear
ls
cd development/
ls
clear
ls
cd ..
clea
clear
cd development/
cd flutter/bin
ls
clear
cd ..
cd .
cd ..
ls
clear
cd .config/
ls
cd nushell/
ls
nvim env.nu
flutter doctor
nvim
$nu.env
$nu.ENV
env
env.PATH
clear
flutter
clear
flutter doctor
xcode-select --switch /Applications/Xcode.app/Contents/Developer
sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer
sudo xcodebuild -runFirstLaunch
clear
ls
cd workspace/
ls
cd rust/
ls
clear
cargo new hello world
cargo new hello-world
ls
cd hello-world/
ls
clear
ls
cargo run
clear
cargo run
g++ version
g++ --version
g++
clear
cd workspace/
ls
mkdir c
ls
cd c
ls
clear
mkdir jogo-adivinha
clear
ls
cd jogo-adivinha/
clear
g++ jogoadivinha.cpp -o jogoadivinha.out
ls
jogoadivinha.out
clear
./jogoadivinha.out
g++ jogoadivinha.cpp -o jogoadivinha.out
clear
./jogoadivinha.out
cd ..
cls
clear
ls
clear
mkdir mini_dungeons
cd mini_dungeons/
clear
nvim
ls
cd .config/
ls
clear
cd nvim/
ls
clear
nvim
clear
nvim
cd ..
clear
cd ..
mv c cpp
ls
cd cpp
clear
mkdir pacman
cd pacman/
lcear
clear
git init
ls
ls -a
clear
nvim
mkdir Headers
cd ..
ls
cd .
.cd ..
ls
cd ..
ls
cd nest
clear
ls
clear
npm update -g @nest//cli
npm i -g @nest//cli
fnm exec --using=18 npm i -g @nest/cli
fnm exec --using=18 npm i -g @nestjs/cli
clear
nest new nestjs-api
nvim jogoadivinha.cpp
clear
cd .config
clear
ls
nvim starship.toml
clear
ls
exercism
brew uninstall exercism
exercism
ls
rm exercism/
rm -r -f -v exercism/
clear
ls
clear
ls
clear
brew install stow
lsd
clear
cd ..
ls
ls -a
lsd -a
clear
mkdir .dotfiles
ls
ls -a
clear
ls
mkdir dotfiles
cd dotfiles
git init bare
ls
ls -a
rm -r -f -v bare
cd ..
ls
cd dotfiles/
clear
ls
git init --bare
ls
ls -a
cd hooks
ls
cd ..
rm -r -f -v dotfiles
clear
ls
clear
stow --version
clear
cd .dotfiles/
clear
cd ..
ls
ls -a
cd .fnm
ls
cd ..
cd .config
ls
cd ..
cd .cargo
ls
cd ..
clear
ls -a
cd .vim
clear
ls
cd autoload/
ls
cd ..
cd undodir/
ls
cd ..
clear
ls
ls -a
nvim .zshrc
nvim .yarnrc
nvim .profile
nvim .gitconfig
clear
ls
clear
cd .dotfiles/
celar
clear
ls
clear
mkdir nvim
mkdir kitty
ls
cd ..
cd .config
ls
cd git
ls
cd ..
cd flutter/
ls
cd ..
clear
cd ..
cd .dotfiles/
clear
cd nvim/
mkdir -p .config/nvim
mkdir .config/nvim
ls
mkdir .config
cd .config/
ls
nvim
cd nvim/
ls
cd ..
clear
cd ..
rm nvim
cd nvim/
cd .config/
rm nvim
ls
cd ..
clear
 cd ..
cd ..
clear
cd .config/
ls
mv nvim/ ~/.dotfiles/nvim/.config/
ls
cd ..
clear
cd .dotfiles/
clear
ls
stow nvim/
ls
cd ..
cd .colima/ls
cd ~
cd .config/
ls
cd nvim/
nvim
clear
cd ~
cd .dotfiles/
ls
cd kitty/
ls
mkdir .config
ls
mkdir .config
ls
ls -a
clear
cd ~
ls -a
cd .colima
ls
nvim
colima --version
brew uninstall colima
cd ..
ls
ls -a
brew uninstall colima\
brew uninstall colima
rm -r -f -v .colima/
clear
ls
cd .config/
ls
mv kitty/ ~/.dotfiles/kitty/.config/
clear
cd ~
cd .config/
ls
cd ..
cd .dotfiles/
ls
stow kitty/
cd ..
ls
cd .config/
ls
clear
cd ..
ls
cd Library/
ls
cd `Application Support/`
ls
cd nushell
ls
cd lib/
ls
cd core/
ls
cd ..
ls
cd ..
cd ~
ls
cd .dotfiles/
ls
mkdit nushell
ls
mkdir nushell
cd nushell/
mkdir Library
cd Library/
mkdir Application Support
ls
rm -r -f -v Application/
rm -r -f -v Support/
ls
mkdir "Application Support"
ls
cd ..
clear
cd ~
cd .config/
cd nushell/
ls
cd ..
bash
ls
cd ~
cd `Library/Application Support/`
ls
cd nushell/
cd ~
clear
cd .dotfiles/
ls
clear
 $HOME
clear
$env
$env.HOME
clear
zsh
ls
nvim install.sh
ls
cd nushell/
ls
cd Library/
cd `Application Support/`
ls
cd nushell/
ls
nvim history.txt
cd ~/.dotfiles/
nvim .gitignore
clear
git remote
git remote set
git
git status
git remote -h
git remote add origin https://github.com/ruan-molinari/.dotfiles.git
git -h
git init
git remote add origin https://github.com/ruan-molinari/.dotfiles.git
git push
git add .
clear
ls
ls -a
cd kitty/
ls
ls -a
cd .config/
ls
cd kitty/
ls
cd kitty-themes/
ls
cd ~
cd .dotfiles/
git add .
clear
git rm .git
rm .git
ls -a
git -r -f -v .git
rm -r -f -v .git
git init
git remote add origin https://github.com/ruan-molinari/.dotfiles.git
git add .
ls
cd kitty/
ls
cd .config/
ls
nvim kitty/
cd ..
git rm --cached kitty/.config/kitty/kitty-themes/
git rm --cached kitty/.config/kitty/kitty-themes/ -f
git submodule add https://github.com/dexpota/kitty-themes kitty/.config/kitty/kitty-themes/
cd kitty/
cd .config/
cd kitty/
ls
cd kitty-themes/
ls
cd ....
cd ..
git add .
git commit -m "Initial commit"
git push
git pull
git pull origin main
git pull origin FETCH_HEAD
git pull origin main
git pull origin main --ff-only
git pull origin main --no-rebase
git pull origin main --rebase
git pull origin main
git add .
ls
ls -a
git commit -m "Initial commit"
git push
git pull
git branch --set-upstream-to=origin/<branch> main
git branch --set-upstream-to=origin/main
git pull
git push
git pull origin/main
git pull origin main
git pull --rebase
git fetch
git push
git push -u
git push -U
git push -u origin main
git pull --rebase
git commit -m "Initial commit"
git rm --cached .
ls
rm -r -f -v .git
git init
git remote add origin https://github.com/ruan-molinari/.dotfiles.git
git submodule add https://github.com/dexpota/kitty-themes kitty/.config/kitty/kitty-themes/
git pull
git pull origin main
ls
git add .
git commit -m "Initial commit"
git push
clear
cls
clear
ls
cd nushell/
ls
cd Library/
ls
cd `Application Support/`
ls
cd nushell/
ls
clear
ls
ls -a
ls
clear
ls -a
cd .skiko/
ls
cd 9501f4ff87ab1f362914703c445352b4fa63ad64a4fa1677eebfb03ff03a0cde/
ls
nvim libskiko-macos-arm64.dylib
cd ..
ls
clear
ls -a\
ls -a
skiko --version
rm -r -f -v skiko
clear
ls -a
rm -r -f -v .skiko
clear
ls -a
nvim .angular-config.json
cd .rustup/
ls
cd downloads/
ls
ls -a
cd ..
cd toolchains/
ls
ls -a
cd ..
ls
cd tmp/
ls
ls -a
cd ..
nvim settings.toml
cd ..
ls
clear
ls -a
cd .local/
ls
cd share/
ls
cd direnv/
ls
cd allow/
ls
cd ..
ls
cd ..
ls
cd wezterm/
ls
cd ~
clear
ls -a
cd .config/
ls
cd nushell/
ls
nvim starship.toml
ls
nvim env.nu
cd ~
cd .dotfiles/
ls
git pull
clear
cd ..
ls
cd workspace/
ls
clear
ls
cd nest
clear
ls
cd workspace/
ls
cd nest/
ls
rm -r -f -v nestjs-api/
rm -r -f -v nestjs-api-tutorial/
clear
ls
cd nestjs-chat/
ls
nvim
nest new nestjs-chat
c;ear
clear
npm install prisma
clear
npm install prisma --save-dev
npm config set registry http://registry.npmjs.org/
npm install prisma --save-dev
clear
clear
ls
clear
npx prisma init --datasource-provider sqlite
ls
nvimn
nvim
npx prisma migrate dev --name init
npm i @prisma/client
npx prisma migrate dev --name init
npx prisma generate
clear
ls
rm -r -f -v node_modules
rm package-lock.json
ls
ls -a
pnpm
brew install pnpm
pnpm
pnpm init
cd ..
ls
rm -r -f -v nestjs-chat/
nest new chat-nestjs
ls
cd chat-nestjs/
pnpm install prisma --save-dev
pnpm dlx prisma migrate dev --name init
pnpm dlx prisma init --datasource-provider sqlite
cd ..
ls
cd chat-nestjs/
clear
pnpm dlx prisma migrate dev --name init
pnpm install @prisma/client
pnpm dlx prisma migrate dev --name init
clear
nest g module prisma
nest g service prisma
pnpm dlx prisma studio
clear
pnpm run start:dev
clear
pnpm i class-validator
pnpm i class-transformer
pnpm i @nestjs/passport @nestjs/jwt bcrypt class-validator class-transformer passport passport-jwt passport-local
pnpm i -D @types/passport-jwt @types/passport-local @types/bcrypt
clear
git init
git add .
git commit -m "Initial commit"
clear
nest g resource user
clear
pnpm run start:dev
clear
pnpm dlx prisma migrate dev --name init
pnpm run start:dev
clear
ls
rm -r -f -v dist
clear
nvim
git add .
git commit -m "Create user"
clear
nest g module auth
nest g controller auth
nest g service auth
clear
nvim
clear
cd ..
git clone https://github.com/aseprite/aseprite.git
cd aseprite/
ls
git pull
git submodule update --init --recursive
brew install ninja
cd ..
clear
clear
ls
mkdir build
clear
ls
cd build/
clear
cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_OSX_ARCHITECTURES=arm64 -DCMAKE_OSX_DEPLOYMENT_TARGET=11.0 -DCMAKE_OSX_SYSROOT=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk -DLAF_BACKEND=skia -DSKIA_DIR=~/Downloads/skia -DSKIA_LIBRARY_DIR=~/Downloads/skia/out/Release-arm64 -DSKIA_LIBRARY=~/Downloads/skia/out/Release-arm64/libskia.a -DPNG_ARM_NEON:STRING=on -G Ninja
cd ..
ls
cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_OSX_ARCHITECTURES=arm64 -DCMAKE_OSX_DEPLOYMENT_TARGET=11.0 -DCMAKE_OSX_SYSROOT=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk -DLAF_BACKEND=skia -DSKIA_DIR=~/Downloads/skia -DSKIA_LIBRARY_DIR=~/Downloads/skia/out/Release-arm64 -DSKIA_LIBRARY=~/Downloads/skia/out/Release-arm64/libskia.a -DPNG_ARM_NEON:STRING=on -G Ninja
ls
rm -r -f -v CMakeCache.txt
rm -r -f -v CMakeFiles/
ls
cd build/
cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_OSX_ARCHITECTURES=arm64 -DCMAKE_OSX_DEPLOYMENT_TARGET=11.0 -DCMAKE_OSX_SYSROOT=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk -DLAF_BACKEND=skia -DSKIA_DIR=~/Downloads/skia -DSKIA_LIBRARY_DIR=~/Downloads/skia/out/Release-arm64 -DSKIA_LIBRARY=~/Downloads/skia/out/Release-arm64/libskia.a -DPNG_ARM_NEON:STRING=on -G Ninja
cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_OSX_ARCHITECTURES=arm64 -DCMAKE_OSX_DEPLOYMENT_TARGET=11.0 -DCMAKE_OSX_SYSROOT=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk -DLAF_BACKEND=skia -DSKIA_DIR=~/Downloads/skia -DSKIA_LIBRARY_DIR=~/Downloads/skia/out/Release-arm64 -DSKIA_LIBRARY=~/Downloads/skia/out/Release-arm64/libskia.a -DPNG_ARM_NEON:STRING=on -G Ninja ..
git clone --recursive https://github.com/aseprite/aseprite.git
ls
cd ..
git clone --recursive https://github.com/aseprite/aseprite.git
rm -r -f -v aseprite/
git clone --recursive https://github.com/aseprite/aseprite.git
cd aseprite/
git pull
git submodule update --init --recursive
cmake --version
mkdir build
cd build
$HOME
$nu.HOME
$env.HOME
cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_OSX_ARCHITECTURES=arm64 -DCMAKE_OSX_DEPLOYMENT_TARGET=11.0 -DCMAKE_OSX_SYSROOT=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk -DLAF_BACKEND=skia -DSKIA_DIR=$env.HOME/Downloads/skia -DSKIA_LIBRARY_DIR=$env.HOME/Downloads/skia/out/Release-arm64 -DSKIA_LIBRARY=$env.HOME/Downloads/skia/out/Release-arm64/libskia.a -DPNG_ARM_NEON:STRING=on -G Ninja
cd build/
cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_OSX_ARCHITECTURES=arm64 -DCMAKE_OSX_DEPLOYMENT_TARGET=11.0 -DCMAKE_OSX_SYSROOT=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk -DLAF_BACKEND=skia -DSKIA_DIR=$env.HOME/Downloads/skia -DSKIA_LIBRARY_DIR=$env.HOME/Downloads/skia/out/Release-arm64 -DSKIA_LIBRARY=$env.HOME/Downloads/skia/out/Release-arm64/libskia.a -DPNG_ARM_NEON:STRING=on -G Ninja ..
clear
cd ~
ls
cd Documents/
ls
nvim finances.beancount
clear
cd ~/workspace/
ls
cd rust/
ls
clear
mkdir programming_rust_book
cd programming_rust_book/
clear
cargo new hello-world
ls
cd hello-world/
ls
nvim
cargo run
clear
cd ..
rustup update
clear
cargo new euclidean-algorithm
cd euclidean-algorithm/
cargo test
cargo run 42 56
cargo run 799459 28823 27374
cargo run 799459 28823 27375
cargo run 1243908 57918 0450562
cargo run 1243908 57918 0450563
cargo run 1243908 57915 0450563
cargo run 124398 57915 0450563
clear
cargo run 799459 28823 27347
cargo run
clear
rustup doc --std
nvim
clear
ls
cd ..
ls
cd ..
ls
mv programming_rust_book/ programming-rust-book
ls
cd programming-rust-book/
ls
clear
ls
cd ..
ls
cd conway_game_of_life/
nvim
ls
cd ..
ls
clear
ls
cd advent-of-code/
l
sls
ls
clear
cd day-01/
nvim
clear
cd ~
clear
ls
cd workspace/
ls
cd nest/
cd chat-nestjs/
clear
nvim
cd ~
clear
ls
cd .config/
ls
cd nvim/
ls
nvim
cd ~
clear
cd ~
cd .config/nvim/
nvim
nv
nvim
clear
nvim
cd ~
ls
clear
ls
cd workspace/
ls
cd nest/
cd chat-nestjs/
nvim
cd ~
ls
cd Documents/
ls
nvim finances.beancount
ear
clear
ls
cd ..
cd .config/nvim/
nvim
cd Documents/
clear
cd workspace/
ls
cd nest/
nvim
ts
treesitter
clear
nvim finances.beancount
cd chat-nestjs/
ls
nvim
cd ..
ls
cd rust/
ls
cd hello-world/
ls
clear
nvim
nvim  finances.beancount
cd ..
ls
cd .config/nvim/
nvim
nvim
cargo install tree-sitter-cli
tree-sitter-cli --version
tree-sitter --version
tree-sitter -h
clear
cd ~
clear
ls
ls -a
mvo,
clear
 cd..
cd ..
lc
clear
ls
cd programming-rust-book/
ls
cd euclidean-algorithm/
clear
nvim
clear
cd workspace/
cd rust/
ls
clear
cd programming-rust-book/
ls
clear
cd euclidean-algorithm/
clear
nvim
clear
cd ..
clear
cargo new actix-gcd
cd actix-gcd/
clear
ls
clear
cd .config/nvim/
cargo run
clear
cd ..
ls
cd euclidean-algorithm/
nvim
cd ~
cd workspace/
cd ..
cd .config/nvim/
clear
nvim
cd ..
cargo new mandelbrot
clear
cd mandelbrot/
clear
nvim
cd ..
git init
git add hello-world/
ls
cd add euclidean-algorithm/
git add euclidean-algorithm/
cd hello-world/
ls
ls -a
rm -r -f -v .git/
cd ..
ls
git add hello-world/
git commit -m "Hello world"
ls
cd euclidean-algorithm/
rm -r -f -v .git/
cd ..
clear
git add euclidean-algorithm/
git commit -m "Euclidean algorithm"
cd ..
ls
cd programming-rust-book/
ls
cd actix-gcd/
rm -r -f -v .git/
cd ..
git add actix-gcd/
git commit -m "Euclidean algorithm with actix web"
ls
cd mandelbrot/
clear
ls
rm -r -f -v .git/
cd ..
clear
..
ls
clear
cd programming-rust-book/
cd mandelbrot/
clear
ls -a
clear
cd ..
cd mandelbrot/
clear
cd .config/kitty/
clear
nvim
cd workspace/
clear
ls
cd nest/
ls
cd chat-nestjs/
clear
nvim
clear
nvim
clear
:q
clear
cargo test
clear
cargo test
cargo test RUST_BACKTRACE=1
cargo test
clear
nvim
celar
cd ~
cd workspace/
cd nest/
ls
cd chat-nestjs/
clear
yarn start:dev
clear
pnpm run start:dev
clear
pnpm run start:dev
clear
pnpm run start:dev
clear
pnpm run start:dev
clear
pnpm run start:dev
nvim
cd ..
ls
..
cd rust/
cd programming-rust-book/
ls
cd mandelbrot/
clear
Gclear
clear
cargo build --release
mandelbrot mandelbrot.png 
ls
cd target/release/
mandelbrot mandelbrot.png 4000x3000 -1.20,0.35 -1,0.25
ls
./mandelbrot mandelbrot.png 4000x3000 -1.20,0.35 -1,0.25
ls
./mandelbrot.png
./mandelbrot mandelbrot.png 4000x3000 -1.20,0.35 -1,0.20
rm mandelbrot.png
ls
./mandelbrot mandelbrot.png 4000x3000 -1.20,0.35 -1,0.20
cargo build --release
./mandelbrot mandelbrot.png 4000x3000 -1.20,0.35 -1,0.20
./mandelbrot mandelbrot.png 4000x3000 -1.20,0.35 -1,0.25
./mandelbrot mandelbrot.png 4000x3000 -1.20,0.35 -1,0.30
./mandelbrot mandelbrot.png 4000x3000 -1.20,0.35 -1.10,0.30
./mandelbrot mandelbrot.png 4000x3000 -1.20,0.35 -1.10,0.25
./mandelbrot mandelbrot.png 4000x3000 -1.20,0.35 -1,0.20
./mandelbrot mandelbrot.png 4000x3000 -1.20,0.35 -1,0.15
cargo build --release
./mandelbrot mandelbrot.png 4000x3000 -1.20,0.35 -1,0.20
clear
./mandelbrot mandelbrot.png 4000x3000 -1.20,0.35 -1,0.15
./mandelbrot mandelbrot.png 4000x3000 -1.20,0.35 -1,0.20
clear
nvim
clear
cd ..
ls
clear
cd ..
ls
clear
cd ..
..
ls
clear
cargo new perlin-noise
clear
ls
clear
cd perlin-noise/
clera
clear
nvim
clear
..
ls
mkdir angular
cd angular/
cd ..
mv angular-unit-testing/ angular/unit-testing
ls
clear
cd angular/
clear
ls
nng new station-core --create-application=false
ng new station-core --create-application=false
ls
cd station-core/
clear
ls
ng g library @station/cards
nvim
cd ..
..
ls
cd perlin-noise/
nvim
..
ls
cd nest/
ls
cd chat-nestjs/
clear
pnpm run start:dev
clear
pnpm run start:dev
ls
cd \
rm \
ls
clear
nvim
ls
rm -r -f -v dist/
nvim
.
..
clear
..
clear
ls
rm -r -f -v ailos_teste/
npx create-nx-workspace --pm pnpm
clear
ls
pnpm i -g nx@latest
pnpm setup
yarn
clear
ls
yarn global add nx@latest
nx
npx create-nx-workspace@latest nx-laboratory
ls
cd nx-laboratory/
nvim
cd ..
rm -r -f -v nx-laboratory/
clear
npx create-nx-workspace@latest myorg --preset=ts
npx create-nx-workspace@latest laboratory --preset=ts
cd laboratory/
clear
ls
nvim
pnpm run start:dev
yarn add -D husky lint-staged
yarn remove -D husky commit-staged
yarn remove -D lint-staged
yarn remove -D husky lint-staged
clear
git add .
git commit -m "chore: initial commit"
clear
yarn add -D husky lint-staged
npm init @eslint/config
clear
yarn add -D @nrwl/linter @nrwl/eslint-plugin-nx
clear
..
ls
cd nest/
ls
cd chat-nestjs/
git add .
git commit -m "feat: implementing jwt login structure"
clear
git push
nvimn
clear
pnpm run prepare
npx husky add .husky/pre-commit "npx lint-staged --concurrent false --relative"
git add .
git commit -m "ci: adding auto lint, format and type check on commit with husky and lint-staged"
clear
cd ..
npx create-nx-workspace
clear
ls
cd lab
clear
pnpn install -D @nx/nest
pnpm install -D @nx/nest
pnpm add -g pnpm
pnpm setup
clear
nvim
clear
cd ~
cd .config
cd nvim/
clear
cd workspace/
ls
cd lab
clear
nvim
cd ~
clear
cd workspace/
ls
cd angular/
clear
ls
ng -v
ng --versiona
ng --version
ng --help
ng version
clear
ng update
ng --help
clear
ls
clear
ng --help
ng new ecommerce
clear
ls
cd ecommerce/
clear
ng g m product-details && ng g c product-details
ng g m product-details ; ng g c product-details
ls
clear
ng g m card; ng g c cart
clear
ng g service products
ls
cd src
ls
cd app
ls
ng g m cart
rm -r -f -v card
mv products.service.ts ./services/products.service.ts
mkdir services
mv products.service.ts ./services/products.service.ts
clear
ls
rm products.service.spec.ts
clear
ls
nvim
cd app
...
clear
ls
cd src/
clear
ls
clear
yarn run ngcc
clear
nvim
ls
cd app/
clear
ls
rm -r -f -v cart
rm -r -f -v product-details/
rm -r -f -v products
clear
cd ..
..
cd src/
clear
ng g component components/store
ng g c components/product-details
ng g c components/cart
clear
cd .config/nvim/
ng g service services/cart.service.ts
ng g service services/cart
clear
cd .config/nvim/
nvim
ls
cd src
ls
mv data/products.json assets/data.json
clear
nvim
cd .c
..
cd .config/nvim/
fnpm install -g @angular/language-server
npm install -g @angular/language-server
clear
nvim
ng s
clear
nvim
clear
 clear
ng serve
nvim
ng test
ng generate config karma
ng test
npm install karma-firefox-launcher --save-dev
ng test
clear
ng test
clear\
clear
nvim
ls
cd src/
ls
cd assets/
ls
clear
bat data.json
cat data.json
nvim
ng test
clear
brew install barrier
barrier
clear
barrier
nvim
ng test
clear
nvim
clear
cd ~
clear
cd ~\
cd ~
clear
cd Downloads/
ls
ls -a
clear
cd ~
cd workspace/
ls
cd ..
clear
cd workspace/
ng new number8
clear
nvim
cd number8/
clear
nvim
clear
cd src/
ls
cd app/
clear
ls
rm product.service.spec.ts
mv product.service.ts services/product.service.ts
mkdir services
mv product.service.ts services/product.service.ts
clear
cd
ls
cd workspace/number8/
clear
nvim
cd ..
..
clear
nvim
clear
nvim
ng s
clear
cd ~
cd workspace/
clear
ls
cd laboratory/
ls
clear
nvim
git status
git log
clear
nvim
npx nx g @nx/angular:app admin --directory=apps/admin
pnpm install -D @nx/angular
pnpm add -g pnpm
yarn help
yarn global list
clear
npm global list
npm help
npm -l
clear
npm list -g
brew help
bew list
brew list
brew install pnpm
clear
npx nx g @nx/angular:app admin --directory=apps/admin
clear
nvim
clear
npx nx g @nx/nest:app server --directory=apps/server
clear
npx nx g @nx/nest:app auth
npx nx g @nx/nest:app auth --directory=apps/auth
clear
ls
cd apps/
ls
mkdir oauth
mv auth/ oauth/
mv auth-e2e/ oauth/
ls
mv oauth auth
ls
cd auth/
ls
clear
..
ls
..
pnpm install -D @nestjs/microservices
clear
nvim
npm i -S @nestjs/microservices @nestjs/passport @nestjs/jwt passport passport-local passport-jwt bcrypt
cd .config/nvim/
clear
pnpm i -D @types/passport-local @types/passport-jwt @types/bcrypt
clear
nvim
clear
nvim
clear
nvim
pnpm i -D @typescript-eslint/eslint-plugin@latest
pnpm i -D @typescript-eslint/parser@latest
pnpm i -D @typescript-eslint/parser@^5.60.1
pnpm i -D @typescript-eslint/eslint-plugin@^5.60.1
clear
nvim
ls
cd apps/
ls
rm -r -f -v server
clear
..
clear
nvim
cd apps/
ls
cd auth/
clear
ls
nest g module Auth
nest g service Auth
nest g controller Auth
clear
....
clear
nvim
ls
cd apps/auth/
ls
cd auth
ls
cd src
ls
mv auth ./app/auth
ls
....
..
clear
cd apps/
ls
rm -r -f -v admin
clear
..
clear
cd workspace/
ls
cd nest/
ls
cd chat-nestjs/
clear
nvim
nvim
clear
ls
cd apps
ls
rm -r -f -v auth/
clear
ls
ls -a
clear
..
ls
clear
ls
ls
npx nx g @nx/nest:app api --directory=apps/api
clear
clear
ls
cd src
ls
nim
yarn add -D prisma
clear
npx prisma init
npx prisma generate
ls
cd prisma
ls
..
rm -r -f -v prisma
ls
npx prisma init
ls
cd prisma/
nvim
..
rm -r -f -v prisma
clear
ls
clear
ls
clear
clear
yarn add -D @nx/js
clear
ls
rm -r -f -v node_modules/
rm pnpm-lock.yaml
rm package-lock.json
rm yarn.lock
rm yarn-error.log
clear
yarn install
ls
cd apps/
ls
rm -r -f -v api
rm -r -f -v api-e2e/
clear
ls
clera
..
clear
ls
..
cd ~
clear
ls
cd .config/
clear
ls
..
ls
ls -a
cd .dotfiles/
clear
ls
git add .
git status
git commit -m "updating some configs on nvim plugins and nushell"
clear
ls
cd kit
ls
ls -a
cd .config
ls
cd kitty/
clera
ls
clear
ls
clear
nvim
cleaR
yarn add -g @ionic/cli
npm install -g @ionic/cli
clear
ls
cd workspace/
clear
ls
ionic start
clear
cd rust/
clear
ls
cd programming-rust-book/
clear
ls
cd mandelbrot/
clear
py
python
clear
brew link --force python@3.12
brew install python@3.12
sudo xcodebuild -license accept
brew install python@3.12
brew link --force python@3.12
python
py
clear
cargo install python
clear
ls
python3
brew unlink python 3.11
brew unlink python@3.11
brew link --force python@3.12
brew install python@3.12
clear
py3
python3
clear
python3 -m pip install --upgrade setuptools
python3 -m pip install --upgrade pip
clear
pip
clear
pip3
clear
cd workspace/
ls
clear
cd python/
clear
ls
clear
mkdir hello-world
clear
cd hello-world/
clear
nvim
..
rm hello-world/
mkdir First Project
cd First/
..
mv First/ "First Project"
ls
rm Project/
clear
ls
cd `First Project/`
clear
ls
python3 my_program.py
clear
cd .config/
clear
ls
cd nushell/
ls
py
py my_program.py
clear
cd workspace/
ls
cd python/
cd `First Project/`
py my_program.py
cd workspace/
ls
cd python/
clear
cd `First Project/`
py my_program.py
clear
cd workspace/
ls
py
cd py
ls
cd `First Project/`
py my_program.py
clear
py --version
py --help
python3 -h
python3 --version
pip -v
pip --version
pip3 --version
pip
py --version
python3 --version\
python3 --version
python
python3
cd .config/
ls
cd nushell/
nvim
..
cd ~
ls
ls -a
cd .dotfiles/
ls
ls -a
nvim
clear
git add .
..
clear
ls
clear
ls
cd .config/
ls
cd nushell/
clear
nvim
clear
s
ls
..
clear
cd ~
clear
ls
cd .config/
ls
cd nushell/
clear
..
ls
cd Library/
ls
..
ls
cd ~
clear
ls
brew
brew info python
brew link --force python@3.11
python
clear
brew info python
py
python
brew info python
cd /opt/homebrew/opt/python@3.11/libexec/bin
ls
python
pip
ls
cd .config/
ls
cd nushell/
ls
cd /opt/homebrew/opt/python@3.11/libexec/bin
ls
..
ls
..
ls
cd bin
ls
..
ls
cd libexec/
ls
cd bin/
ls
python
./python
ls
python3.11 
nvim env
cd .config/nushell/
nvim
python
clear
py
pip
pip -v
clear
brew info python
python-config
clear
ls
clear
python -m pip install virtualenv
ls
cd workspace/k
..
cd python/
ls
clear
mkdir shorts-gen
cd shorts-gen/
ls
virtualenv venv
ls
which python
clear
which python3
python3 -v
python3 --version
clear
ls
cd venv/
ls
nvim
..
clear
virtualenv -h
clear
source venv/bin/activate.nu
venv/bin/activate.nu
source venv/bin/activate.nu
ls
cd venv/
ls
cd bin/
ls
nvim activate.nu
..
overlay use venv/bin/activate.nu
clear
ls
clear
pip install praw
clear
nvim
pip install pandas
clear
cd .config/
ls
cd nvim/
ls
nvim
nvim
python3 main.py
ls
cd venv/
ls
cd lib
ls
cd python3.11/
l
ls
cd site-packages/
ls
..
python main.py
clear
python -h
python -V
clear
overlay use venv/bin/activate.nu
python main.py
clear
python main.py
ls
clear
python main.py
clear
python main.py
..
cd python/
mkdir GANs
cd GANs/
virtualenv venv
overlay use venv/bin/activate.nu
clear
ls
clear
clear
..
ls
mkdir shortfy
clear
..
ls
cd python/
rm shorts-gen/
rm -r -f -v shorts-gen/
clear
ls
rm -r -f -v GANs/
ls
cd shortfy/
clear
virtualenv venv
overlay use venv/bin/activate.nu
clear
cd .config/
ls
cd venv/
ls
cd bin/
ls
nvim activate.nu
deactivate
clear
overlay use venv/bin/activate.nu
clear
clear
cd ~
cd workspace/
ls
cd python/
ls
cd shortfy/
clear
overlay use venv/bin/activate.nu
clear
cd .config/
ls
cd nushell/
ls
clear
cd lib/
ls
cd core/
ls
clear
ls
cd workspace/
cd python/
clear
ls
cd shortfy/
..
clear
cd workspace/
cd python/
ls
cd shortfy/
cd venv/
..
clear
cd workspace/
cd python/
ls
cd shortfy/
cd workspace/python/shortfy/
..
clear
overlay hide venv --keep-env [ PWD ]
overlay hide venv
deactivate
deactivate venv
cd workspace/python/shortfy/
overlay hide venv
overlay hide venv --keep-env [ PWD ]
overlay hide venv/bin/activate.nu --keep-env [ PWD ]
clear
overlay
overlay list
overlay hide activate
cd workspace/python/shortfy/
..
cd workspace/python/shortfy/
..
cd shortfy/
cd venv/
ls
cd shortfy/
clear
ls
cd shortfy/
cd venv/
cd workspace/python/shortfy/
cd venv/
..
clear
cd workspace/python/shortfy/
cd venv/
..
clear
cd workspace/python/shortfy/
cd venv/
..
cd workspace/python/shortfy/
cd venv/
..
clear
cd workspace/python/shortfy/
overlay
clear
overlay
overlay -h
clear
cd workspace/python/shortfy/
clear
cd venv/
..
cd shortfy/
..
clear
ls
cd python/
clear
cd workspace/python/shortfy/
..
cd workspace/python/shortfy/
..
cd shortfy/
..
overlay hide activate
..
clear
cd workspace/
ls
cd python/
cd shortfy/
..
clear
cd shortfy/
overlay 
overlay use venv/bin/activate.nu
..
clear
cd shortfy/
clear
ls
clear
ls
cd workspace/
cd python/
ls
rm -r -f -v pontobot/
clear
cd shortfy/
ls
clear
overlay use venv/bin/activate.nu
clear
pip install tortoise-tts
pip3 install --pre torch torchvision torchaudio --index-url https://download.pytorch.org/whl/nightly/cpu
clear
pip install numba inflect psutil
pip install --pre torch torchvision torchaudio --index-url https://download.pytorch.org/whl/nightly/cpu
clear
pip install transformers
ls
cd venv
ls
cd lib
ls
..
cd share
ls
cd doc
ls
..
ls
cd lib
ls
cd python3.11/
ls
cd site-packages/
ls
..
git clone https://github.com/neonbjb/tortoise-tts.git
cd tortoise-tts/
ls
pip install .
..
clear
ls
py main.py
clear
python main.py
ls
cd venv/
ls
cd lib/
ls
cd python3.11/
ls
cd tortoise-tts/
ls
clear
ls
python main.py
cd venv/
ls
cd lib/
ls
cd python3.11/
cd tortoise-tts/
ls
python setup.py
pip install setup.py
pip install ./setup.py
pip install .
nvim
ls
..
clear
python main.py
clear
python
clear
python main.py
clear
python main.py
ls
pip install -r requirements.txt
clear
python main.py
clear
python main.py
clear
python main.py
ls
overlay use venv/bin/activate.nu
clear
python main.py
clear
python main.py
clear
python main.py
ls
cd venv/
ls
cd share/
ls
cd man/
ls
cd man1/
ls
..
ls
cd doc/
ls
..
ls
..
ls
cd bin/
ls
..
ls
cd lib
ls
cd python3.11/
ls
cd site-packages/
ls
..
clear
..
ls
..
clear
cd /root
cd ..
..
....
ls
ls -a
cd ~
ls
ls -a
venv -h
virtualenv -h
venv
activate
env
clear
virtualenv -h
cd Library/
ls
cd `Application Support/`
clear
cd virtualenv/
ls
cd wheel/
ls
cd 3.11/
ls
cd embed/
ls
cd 3/
ls
..
ls
..
ls
cd image/
ls
cd 1
ls
cd CopyPipInstall/
ls
..
ls
..
ls
..
ls
..
ls -a
..
ls
cd virtualenv/
ls -a
ls -a -t
ls -h
ls -as
ls -a
cd wheel/
ls -a
clear
python main.py
clear
python main.py
ls
cd venv/
ls
cd lib
cd python3.11/
ls
cd site-packages/
cd tortoise/
ls
cd __pycache__/
ls
..
rm -r -f -v __pycache__/
..
ls
cd TorToiSe-2.8.0.dist-info/
ls
..
rm -r -f -v tortoise/
rm -r -f -v TorToiSe-2.8.0.dist-info/
..
ls
cd tortoise-tts/
ls
clear
pip install .
clear
ls venv/
ls
cd venv/
ls
cd lib
ls
cd python3.11/
ls
cd tortoise-tts/
ls
clear
pip install .
clear
..
clear
python main.py
..
ls
cd tortoise-tts/
ls -a
cd .cache/
ls
rm -r -f -v tortoise/
ls
clear
clear
python main.py
cd venv/
ls
cd bin/
ls
nvim activate.nu
overlay 
overlay hide activate
overlay use venv/bin/activate.nu
cd venv/
ce bin/activate.nu
nvim
..
clear
overlay use venv/bin/activate.nu
env
clear
python main.py
ls
nvim tortoise/
clear
ls
cd tortoise/
ls
ls -a
cd models/
ls -a
nvim bin/activate.nu
clear
..
clear
python
clear
ls
cd `First Project/`
clear
ls
clear
nvim
clear
..
ls
clear
mkdir memegram
clear
ls
cd memegram/
clear
virtualenv venv
overlay use venv/bin/activate.nu
clear
pip install instagrapi
clcear
clear
pip install pillow
..
ls
cd memegram/
ls
..
mv memegram/ dumpster
ls
cd dumpster/
ls
overlay use venv/bin/activate.nu
overlay hide activate
clear
exi
cd workspace/
cd python/
cd dumpster/
clear
overlay use venv/bin/activate.nu
clear
ls
cd assets/
ls
overlay use venv/bin/activate.nu
clear
..
over
overlay use venv/bin/activate.nu
clear
python main.py
pip install instagrapi
pip install pillow
python main.py
clear
python main.py
clear
python main.py
python
clear
15000/60
python
clear
cd workspace/
clear
ls
cd rust/
clear
ls
cargo new autoinput
cd autoinput/
clear
cargo run
clear
cargo run
clear
cargo run
clear
cargo run
clear
cargo run
clear
cargo run
cd .config/
cd nvim/
ls
clear
nvim
clear
cargo run
clear
cargo run
clear
cargo run
clear
cargo run
clear
cargo run
1
cargo run
clear
cargo run
clear
cargo run
1clear
clear
cargo run
clear
cargo run
rustup
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
clear
lss
ls
clear
cd rustclea
clear
ls
cd workspace/
clear
ls
rustup
..
ls
cd workspace/
clear
ls
cd rust/
ls
cd autoinput/
clearclear
clear
cargo run
clear
cargo run
clear
cargo run
clear
cargo run
clear
cargo run
clear
cargo run
clear
cargo run
clear
cargo run
clear
cargo run
clear
cargo run
clear
cd workspace/
ls
cd rust/
ls
clear
cd autoinput/
clear
cargo run
clear
cargo run
clear
nvim
clear
..
ls
..
ls
rm -r -f -v aseprite/
rm -r -f -v mobile/
rm -r -f -v number8/
rm -r -f -v habitate/
ls
clear
ls
cd cpp/
ls
..
clear
rm -r -f -v cpp/
clear
ls
cd open-source/
ls
..
rm -r -f -v open-source/
cd weknow/
ls
..
clear
rm -r -f -v weknow/
clear
ls
cd laboratory/
ls
..
cd nest/
ls
clear
ls
clear
tauri
create-tauri-app
clear
cd ~
clear
xcode-select --install
rustup update
clear
cargo install create-tauri-app
clear
ls
cd workspace/
mkdir tauri
cd tauri/
clear
create-tauri-app
cargo create-tauri-app
cargo install tauri-cli
cargo install trunk
rustup target add wasm32-unknown-unknown
clear
ls
cd pomodoro/
tauri
cargo-tauri
nvim
clear
cargo update
clear
cd .config/
cd nvim/
clear
cargo tauri dev
clear
nvim
..
cd rust/
ls
cd programming-rust-book/
ls
cd mandelbrot/
ls
clear
nvim
..
ls
clear
cargo new quickreplace
clear
nvim
clear
ls
clear
..
ls
cd programming-rust-book/
ls
cd quickreplace/
clear
ls
cargo run
cargo run "find" "replace" file output
clear
echo "Hello, world!" > test.txt
ls
echo "Hello, world!" test.txt
ls
sh echo "Hello, world!" > test.txt
clear
cargo run "[a-z]" "0" test.txt test-modified.txt
cat test.txt
cat test-modified.txt
clear
cargo run "[[a-z]" "0" test.txt test-modified.txt
clear
nvim
clear
..
ls
cd
ls
cd workspace/
ls
cd tauri/
clear
ls
cd pomodoro/
clear
cargo tauri dev
nvim
cargo add stylers
clear
clear
cargo tauri dev
clear
cargo add styled
cargo tauri dev
rustc --explain E0554
cler
cer
ls
clear
cargo tauri dev
clear
cargo tauri dev
cleaer
nvim
cargo clean
clear
cargo clean
cargo tauri dev
clear
cargo tauri dev
rustup install nightly
clear
cargo +nightly tauri dev
clear
cargo tauri
cargo tauri signer
cargo tauri build
clear
rustup default nightly
cargo tauri build
clear
..
clear
cargo create-tauri-app margerita
rustup target add wasm32-unknown-unknown
clear
ls
cd margerita
..
rm -r -f -v
rm -r -f -v margerita/
clear
cargo create-tauri-app margherita
clear
cd margherita
rustup toolchain list
rustup toolchain
cd /Users/ruan
cd .rustup/
ls
cd toolchains/
ls
clear
cd nightly-aarch64-apple-darwin/
ls
..
ls
clear
ls
cd
.config/
nvim 
cd nvim/
nvim
nvim
cargo tauri dev
clear
cargo add styled
cargo tauri dev
cargo add stylers
clear
cargo tauri dev
clear
cargo tauri dev
cargo add styles
cargo add styled
cargo tauri dev
cargo add stylist
clear
cargo tauri dev
clear
cargo tauri dev
clear
cargo clean
..
clear
cd margherita/
cargo tauri dev
clear
cargo tauri dev
clear
cargo add styled stylist
cargo clean
cargo tauri dev
clear
cargo add stylers
cargo tauri dev
clear
cargo clean
cargo tauri dev
rustc --explain E0432
cargo clean
cargo tauri dev
clear
cargo tauri dev
clear
py
clear
python
clear
nvim
..
clear
cargo tauri dev
clear
cargo tauri dev
cd .loc
cd share/nvim/
site
cd site/pack/packer/start/
ls
cd nvim-treesitter/
clear
cd parser-info/
ls
nvim c.revision
nix
clear
ls -ld
cd .config/nvim/
clear
nvim
clear
nvim
tree-sitter
tree-sitter parse
tree-sitter -h
tree-sitter dump-languages
nvim
clear
nvim
clear
cargo tauri dev
clear
cargo tauri dev
clear
cargo tauri dev
clear
cargo tauri dev
clear
~
clear
cd .config/nvim/
clear
cd /Users/ruan/.local/share/nvim/site/pack/packer/start/nvim-treesitter/parser-info/
clear
..
ls
nvim
clear
ls
ls -ld
cd parser-info/
ls -ld
chow c.revision ruan
bash
chown c.revision ruan
sudo chown -R ruan c.revision
sudo chown -R ruan rust.revision
ls -ld
ls -ld | uid != ruan
sudo chown -R ruan help.revision
..
clear
ls -ld
clear
cd ~
clear
ls
cd workspace/
ls
cd tauri/
ls
cd margherita/
clear
cd .cargo/bin/
ls
..
ls
..
clear
cd .rustup/
ls
cd toolchains/
clear
ls
ls -ld
cd nightly-aarch64-apple-darwin/
ls
ls -ld
clear
rustc --print sysroot
nvim
rustup
rustup run
rustup self
rustup self update
rustup update
clear
rustc -vV
rustup component add rust-src
nvim
clear
clear
cd ~
clear
nvim
nvim
cargo update rust-analyzer
rustup component add rust-analyzer
rust-analyzer
brew upgrade rust-analyzer
brew install rust-analyzer
clear
rust-analyzer -h
nvim
clear
cd .rustup/
cd toolchains/
ls
cd nightly-aarch64-apple-darwin/
ls
cd bin/
ls
ls -ld
clear
..
ls
cd lib/
ls
ls -ld
cd rustlib/
ls
..
clear
..
ls
cd src/
clear
ls
rust-analyzer app.rs
rust-analyzer
rust-analyzer -h
rust-analyzer analysis-stats
rust-analyzer analysis-stats ../
ls
..
ls
clear
nvim
clear
:q
clear
nvim
nvim
cd workspace/
cd tauri/
cd margherita/
clear
ls
nvim
cd .local/
cd share/
cd nvim
cd site/
cd pack
cd packer
cd start
cd nvim-cmp
cd lua/cmp/utils
ls
cd workspace/tauri/
cd margherita/
clear
nvim
ls
cd .rustup/
ls
cd toolchains/
ls
clear
ls -ld nightly-aarch64-apple-darwin/
cd nightly-aarch64-apple-darwin/
clear
ls -ld
ls
cd bin/
ls
..
sudo rustup component add rust-src
clear
rustup -h
rustup toolchain -h
rustup toolchain stable
rustup toolchain help
rustup help
rustup set
rustup set default stable
rustup set default-holst stable
rustup set default-host stable
clear
rustup
rustup target stable
rustup default stable
clear
tauri dev
cargo tauri dev
clear
nvim
clear
..
ls
rm -r -f -v pomodoro/
clear
cargo create-tauri-app pomodoro
clear
cd pomodoro/
clear
rustup component add rust-analyzer
rustup component add rust-src
clear
rustup update
clear
rust-analyzer -v
rust-analyzer --version
proc-macro --version
rust-analyzer-procmacro-srv --version
cd ~
clear
cd .rustup/
ls
cd toolchains/
ls
cd stable-aarch64-apple-darwin/
clear
ls
cd libexec/
ls
clear
nvim
clear
./rust-analyzer-proc-macro-srv --version
rust-analyzer --help
rust-analyzer --print-lsp-config
rust-analyzer --print-config-schema
clear
..
ls
cd etc/
ls
..
cd share/
ls
cd man/
ls
cd man1/
ls
..
ls
..
ls
clear
nvim
ls
..
ls
cd bin
ls
clear
..
ls
clear
rust-analyzer --print-config-schema
nvim
clear
nvim
clear
:q
rustup help
rustup component help
rustup component list
rustup component remove rust-analyzer
ls
cd libexec/
ls
rm -r -f -v rust-analyzer-proc-macro-srv
..
ls
cd lib
,s
ls
rustup cache
rustup help
rustup self
rustup self upgrade-data
rustup self update
rustup component add rust-analyzer
clear
..
ls
cd libex
clear
ls
..
nvim
clear
ls
cd bin/
ls
clear
nvim
sudo rustup component add rust-src
rustup component remove rust-src
sudo rustup component add rust-src
ls
cd libexec
ls
clear
..
rustup toolchain help
rustup toolchain uninstall stable
..
rustup toolchain uninstall stable
sudo rustup toolchain uninstall stable
rustup toolchain list
rustup toolchain install stable
rustup toolchain default stable
rustup toolchain
rustup default stable
cd stable-aarch64-apple-darwin/
clear
ls
cd libexec/
ls
..
rustup component add rust-analyzer
rustup component add rust-src
nvim
clear
nvim
nvim
clear
cd 
cd workspace/rust/
ls
cd advent-of-code/
ls
..
clear
cd advent-of-code/
ls
rm -r -f -v day-01/
clear
ls
cargo new aoc-2015
cd aoc-2015/
clear
ls
cd src/
..
cargo test
cargo test
clear
cargo test
clear
nvim
clear
cargo run
clear
cargo run
ls assets/
cargo run
clear
cargo run
clear
cargo run
clear
cargo run
clear
cargo run
clear
cargo run
nvim
cd ~
clear
cd workspace/
cd tauri/
ls
cd pomodoro/
clear
cargo tauri dev
rustup target add wasm32-unknown-unknown
cd workspace/
cd rust/
clear
cargo new timer
cd timer/
nvim
..
cd margherita/
nvim
clear
cargo tauri dev
clear
cd .config/
cd kitty/
ls
nvim
x
clear
cd workspace/
cd rust/
cd advent-of-code/
clear
ls
cd aoc-2015/
clear
nvim
cargo run
clear
cargo run
clear
cargo run
clear
cargo run
clear
cargo run
clear
cargo run
clear
cargo run
clear
cargo rubn
clear
cargo run
clear
cargo run
clear
cargo run
clear
cargo run
clear
cargo run
clear
clear
ls
rm -r -f -v \\
ls
rm -r -f -v \
ls
clear
nvim
clear
nvim
clear
..
clear
ls
cd coursera
mkdir 
mkdir coursera
clear
cd coursera/
clear
mkdir introduction-to-programming
clear
ls
cd introduction-to-programming/
clear
ls
mkdir p5js
clear
cd p5js/
clear
cd .conf
clera
clear
ls
cd nvim
clear
ls
nvim
clear
:q
clear
nvim index.html
..
clear
ls
..
ls
clear
cd rust/
celar
clear
ls
mkdir Crust of Rust
cargo new functions-closures-n-traits
clear
ls
cd of
ls
rm -r -f -v Crust
rm of
rm -r -f -v of
rm -f -f -v Rust
clear
mkdir "Crust of Rust"
ls
mv `Crust of Rust/` ../"Crust of Rust"
ls
..
ls
rm -r -f -v Crust/
rm -r -f -v of/
rm -r -f -v Rust
ls
clear
rm -r -f -v "\"Crust of Rust\""
ls
mkdur 'Crust of Rust'
mkdir `Crust of Rust`
ls
rm -r -f -v functions-closures-n-traits/
cd `Crust of Rust/`
clear
ls
cargo new functions-closures-n-traits
clear
ls
cd functions-closures-n-traits/
clear
nvim
..
clear
ls
cd advent-of-code/
clear
ls
cd aoc-2015/
clera
clear
ls
clear
cargo install cargo-aoc
clear
nvim
cargo aoc input -y 2015
cargo aoc credentials -s ownerproof-2243287-1698579108-0d40bfcef305
cargo aoc input -y 2015
cargo aoc input -y 2015 -d 1
cargo aoc help
cargo aoc credentials
cargo aoc credentials -h
cargo aoc credentials -s 53616c7465645f5ff9622c651c8f01e4200be5f8b3797e759528a34794df0a8ec65ed8c9bf07e762e953a945cfb762638dcd0e72caeccb7140525b66d5c5f8d5
clear
cargo aoc input -y 2015 -d 1
cargo aoc input -y 2015 -d 2
cargo aoc input -y 2015 -d 3
cargo aoc input -y 2015 -d 4
cargo aoc input -y 2015 -d 5
clear
ls
cd input/
ls
..
ls
rm -r -f -v assets/
clear
ls
clear
cargo aoc
clear
cargo aoc
clear
cargo aoc
clear
cargo aoc
clear
cargo aoc
clear
cd .conf
cd nvim/
clear
cargo aoc -h
clear
ls
clear
ls
clear
ls
clear
ls
clear
cargo-aoc
cargo-aoc -d 2
cargo-aoc
clear
cargo-aoc
clear
cargo aoc
clear
cargo aoc
cargo test
clear
cargo test
ear
clear
cargo test
clear
carear
clear
cargo test
clearclear
clear
cargo test
clear
cargo test
clear
cargo aoc
clear
cargo aoc
cargo test
clear
cargo test
clear
cargo test
clear
mv src/day2.rs ../day2.rs
git init
git add .
git commit -m "initial commit + day1"
mv ../day2.rs src/day2.rs
git add .
git commit -m "day2"
clear
cargo aoc -h
cargo aoc input -d 2 -y 2015
git rebase -i head~2
git rebase -i HEAD~2
git rebase -i HEAD~3
git rebase -i HEAD~1
git add .
git commit -m "day2 input"
git rebase -i HEAD~2
git rebase --edit-todo
git rebase --continue
git rebase --edit-todo
git rebase --continue
git log
git add .
git commit -m "day2"
git log
git push
clear
nvim
..
ls
mv aoc-2015/ advent-of-code-2015
clear
ls
cd advent-of-code-2015/
clear
ls
..
l
ls
cd advent-of-code-2015/
clear
git push
git remote add origin https://github.com/ruan-molinari/aoc-2015.git
git push -u
clear
cargo aoc input -y 2015 -d 3
clear
ls
clear
git add lib
git add src/lib.rs
git commit -m "including day2 in the module tree"
git push
clear
cargo test
cargo aoc
git add .
cargo test
cargo aoc
git add .
git commit -m "day2 part1"
cargo test
clear
cargo test
clear
git add .
git commit -m "day3, part1 polishing"
clea
clear
git rebase -h
git rebase -i HEAD~2
git rebase --continue
git rebase --edit-todo
git rebase --abort
git rebase -i HEAD~2
git rebase
git add .
git log
git log -h
git log --source
git commit -m "day3, part1"
git push
clear
nvim
cargo test
clear
python
clear
cargo test
cargo run aoc
cargo test
clear
cargo aoc
cargo test
clear
cargo aoc
clear
git add .
git commit -m "day3, part2"
clear
git push
git status
clear
cargo aoc input -y 2015 -d 4
clear
cargo aoc
Pcargo aoc
cargo aoc
clear
cargo aoc
clear
cargo test
clear
cargo aoc
clear
git add .
git commit -m "day4, part1"
clear
cargo aoc
clear
cargo add .
git add .
git commit -m "day4, part2"
clear
git push
cargo aoc
clear
cargo test
cargo aoc
cargo benchmark
cargo aoc benchmark
cargo-aoc -h
cargo-aoc bench
clear
git add . "day4 optimization"
git add .
git commit -m "day4 optimization"
git push
cargo aoc input -y 2015 -d 5
clear
nvim
ls
cd .config/
ls
clear
cd nvim/
nvim
..
git add .
git commit -m "setting polishing, ls-zero upgrade to v3, fix rust-analyzer and rust-tools, & more"
git push
clear
cd 
cd workspace/
clear
ls
cd rust/
cargo new flappy-bevy
cd flappy-bevy/
clear
cargo add bevy
clear
cargo run
clear
cargo run
clear
cargo run
clear
cargo run
clear
cargo run
clear
nvim
cd ..
ls
rm -r -f -v perlin-noise/
rm -r -f -v timer/
rm -r -f -v conway_game_of_life/
ls
clear
ls
rm -r -f -v `Crust of Rust/`
clear
l
clear
ls
rm -r -f -v hello-world/
clear
ls
cd autoinput/
ls
nvim Cargo.toml
rm -r -f -v
..
rm -r -f -v autoinput/
clear
ls
clear
rm -r -f -v input-spam
cargo new input-spam
clear
cd input-spam/
clear
cargo add bevy
clear
cd workspace/
cd rust/
ls
cd flappy-bevy/
clear
ls
cd workspace/
ls
cd tauri/
clear
ls
..
clear
ls
cd rust/
clear
ls
..
ls
cd rust/
clear
ls
..
clear
ls
clear
ls
clear
cargo add bevy_global_input
clear
nvim
cargo run
clear
cargo run
clear
cargo run
nvim
clear
cargo run
clear
cargo run
clear
cargo run
clear
cargo run
clear
cargo run
clear
cargo run
clear
cargo run
clear
cargo run
clear
cargo run
clear
cargo run
clear
cargo run
clear
cargo add enigo
clear
cargo run
clear
cargo run
clear
cargo run
clear
cargo run
clear
cargo run
clear
cargo run
clear
cargo run
cargo add tokio
nvim
cargo run
clear
cargo run
clear
cargo run
clear
cargo run
clear
nvim
cargo add tao
clear
cargo run
clear
cargo run
clear
cargo run
clear
cargo run
clear
cargo run
clear
cargo run
clear
cargo run
clear
cargo run
clear
ls
cd workspace/
ls
cd rust/
clear
ls
cd advent-of-code/
ls
clear
ls
mkdir advent-of-code-2023
cd advent-of-code-2023/
..
cd advent-of-code-2015/
clear
cargo add aoc-runner
..
rm -r -f -v advent-of-code-2023/
clear
cargo new advent-of-code-2023
cd advent-of-code-2023
ls
clear
ls
cargo add aoc-runner
cargo add aoc-runner-derive
clear
ls
clear
cargo aoc input -y 2023 -d 1
..
cd advent-of-code-2015/
clear
ls
nvim
clear
cd workspace/
clear
ls
cd games/
clear
ls
git clone https://github.com/bevyengine/bevy
ls
cd bevy/
clear
ls
cd examples/
cear
clear
ls
cd 3d
ls
skybox.rs
cargo skybox.rs
cargo build skybox.rs
clear
..
clear
ls
..
cargo build
lc
clear
ls
cargo run --example breakout
rustc -vV
rustup
rustup update
clear
cargo run --example breakout
..
clear
ls
cargo new project_intro_bevy
cd project_intro_bevy/
clear
ls
clear
cargo add bevy
clear
ls
clear
cargo run
clear
cargo run
clear
cargo run
cd .config/
ls
cd kitty/
clear
ls
nvim
:q
clear
cd workspace/
ls
cd games/
clear
ls
cd project_intro_bevy/
clea
rclear
clear
cargo run
clear
cargo run
clear
cargo run
clear
lscd workspace/
clear
cd workspace/
clear
cd games/
clear
ls
cd project_intro_bevy/
clear
nvim
clear
cd workspace/
clear
cd games/
ls
cd project_intro_bevy/
clear
cargo run
clear
ls
cd workspace
ls
cd games
ls
cd project_intro_bevy/
ls
clear
nvim
cs ~
cd ~
clear
cd .config/
ls
cd nvim
ls
nvim
clear
git add .
git commit -m "updating keybinds for Colemak"
clear
nvim
clear
git push
..
cs ~
cd ~
le
ls
clear
cs workspace/
cd workspace/
cd games
ls
cd project_intro_bevy/
clear
cd
cd workspace/
cd games/
cd project_intro_bevy/
ls
clea
clear
ls
cargo run
cd .config/
ls
cd nvim
ls
clear
cargo run
cd .c
..
cd .config/
cd nvim
;clear
cargo run
clear
cargo run
clear
cargo run
cd .config/nvim
nvem
nvim
nvim
cargo run --example defferred_rendering
cargo run --example deferred_rendering
cargo run --example 
cargo run --example deferred_rendering
clear
cargo run
rustup updase
rustup update
cd .config/nvim
cd ~
cd .config/nvim
nvim
clear
nvim
..
cd kitt
ls
..
ls
nvim kitty/
lt
ls
cd kitty/
clear
nvim
clear
clear
nvim
cd workspace
cd games
cd project_intro_bevy/
clear
nvim
clear
nvim
cd ~
cd .config/nvim
nvim
..
ls
cd kitty/
ls
nvim
cd ~
cd .config
cd kitty/
ls
nvim
clear
nvim
cd workspace
cd games/
ls
cd project_intro_bevy/
clear
nvim
cd ~
cd .config
cd kitty
nvim
cd workspace/
cd games/
nvim
ls
rm -r -f -v project_intro/
clear
cd project_intro_bevy/
clear
nvim
cd ~
cd .config/
cd kitty/
nvim
cd .config/kitty
nvim
cd workspace/games
cd project_intro_bevy/
clear
cd ~
clear
cd .config/nvim
nvim
nvim
clear
....
ls
..
cd .config/kitty/
nvim
nvim
cd workspace/games
clear
cd project_intro_bevy/
clear
cargo run
;cargo run
cargo run
clear
nvim
..
clear
cargo new pissing_simulator
clear
cd pissing_simulator/
clear
cargo add bevy
clear
cargo run
clear
cargo run
cd ~
cd .config/nvim/
cargo run
nvim
..
clear
ls
cd memory
mkdir memory_managemant_studies
cd memory_managemant_studies/
clear
cd .config/nvim
clear
nvim
mkdir simple_calculator
clear
cd simple_calculator/
clear
g++ main.cpp -o calculator
calculator
./calculator
g++ main.cpp -o calculator
./calculator
g++ main.cpp -o calculator
./calculator
clear
..
clear
mkdir dynamic_array
cd dynamic_array/
clear
g++ main.cpp -o dynamic_array
./dynamic_array
g++ main.cpp -o dynamic_array
./dynamic_array
g++ main.cpp -o dynamic_array
./dynamic_array
g++ main.cpp -o dynamic_array
./dynamic_array
g++ main.cpp -o dynamic_array
./dynamic_array
g++ main.cpp -o dynamic_array
./dynamic_array
nvim
..
clear
..
brew install zig
cd ~
clear
cd .config/nvim/
clear
mkdir zig-calculator
cd zig-calculator/
clear
zig init
zig init-exe
ls
clear
zig run
zit
zig
zig run -h
clear
zig build run
zig build test
clear
zig build test
le
ls
cd zig-out
ls
cd bin
ls
..
clear
zig build run
zig build test
clear
nvim
clear
..
clear
git clone https://ziglings.org
clear
cd ziglings.org/
clear
zig build
brew uninstall zig
clear
ls
ls -a
cd Downloads/
ls
ls -a
,,
cd
clear
ls
ls -a
cd Downloads/
..
cd development/
ls
..
rm -r -f -f development/
clear
ls
cd Documents/
ls
..
cd ruan/
cd Downloads/
ls
lsa
lsd
ls -a
clear
cd OpenDyslexic
ls
..
cd arst
clear
mv zig ../zig
clear
mv -f /Users/ruan/Downloads/zig/ /Userr/ruan/
mv -f /Users/ruan/Downloads/zig/ /Userr/ruan/zig
mv -f /Users/ruan/Downloads/zig/ /Userr/ruan/zig/
mv /Users/ruan/Downloads/zig/ /Userr/ruan/zig/
mv /Users/ruan/Downloads/zig/ /Users/ruan/zig/
..
ls
cd zig
ls
..
mv zig .zig
clear
cd .config/nushell
clear
zig
cd .config/
cd nushell/
clear
zig
clear
zig -h
cd .zig/
clear
./zig -h
ls
cd lib
ls
..
clear
ls
nvim README.md
zig -h
zig
clear
cd Z
cd ~
clear
cd workspace/
ls
cd ziglings.org/
clear
ls
clear
zig version
clear
zig build
clea
clear
zig build
clear
zig build
clear
zig build
clear
zig build
cleaz
clear
zig build
clear
zig build
clear
zig build
clear; zig build
nvim
clear; zig build
nvim
clear
..
curl -L https://raw.githubusercontent.com/rust-lang/rustlings/main/install.sh | bash
clear
ls
cd rustlings/
clear
ls
clear
cargo install --force --path .
clear
ls
rustlingr watch
rustlings hint variable5
rustlings hint variables5
clear
rustlings hint primitive_types3
cd .config
cd Z
cd ~
cd .config/nvim
clear
nvim
clear
ncim
clear
clear
rustlings hint move_semanticr3
rustlings hint move_semantics3
rustlings hint move_semantics2
clear
rustlings hint enums2
rustlings hint enums3
rustlings hint strings2
clear
rustup default nightly
clear
cd ~
clear
rustup target add riscv64-unkown-none-elf
rustup target add riscv64gc-unkown-none-elf
rustup target add riscv64gc-unknown-none-elf
rustup default stable
rustup target add riscv64gc-unknown-none-elf
clear
cd workspace
cargo new riscv-os
clear
cd riscv-os/
clear
cargo run
clear
cargo install cargo-binutils
clear
cargo run
clear
fallocate -l 32M hdd.dsk
clear
rustup component add rls rustfmt rust-analysis clippy
clear
dd -h
dd help
clear
rustup default stable
make
clear
qemu
clear
brew install qemu
clear
qemu
diskutil list
clear
dd if=/dev/zero of=hdd.dsk count=32 bs=1M
clear
diskutil list
le
ls
clear
make
make .
make
ls
ls -a
clear
ls
ls -a
mv src/Makefile Makefile
ls
clear
make
clear
make
clear
make
clear
make
make run
make
clear
make
make run
clear
make
cargo build
make
clear
..
clear
cargo new myos --lib
clear
cd myos
nvim
ls
cd src
mv lib.rs .../riscv-os/src/lib.rs
clear
..
rm -r -f -v myos
clear
cd riscv-os/
clear
cargo new myos --lib
cd myos/
clear
nvim
cd ..
rm -r -f -v myos
clear
make
ls
clear
make
..
cd riscv-os/
clear
make
ls
clear
make
clear
make
make run
cargo run --nostd
cargo run -- --nostd
make
cargo build -nostdlib
clear
cargo build
qemu-system-riscv64
clear
cargo run
cargo build
clear
cargo build
clear
cargo build
rustup default nightly
clear
cargo new myos
cd myos/
nvim
rm -r -f -v myos
..
rm -r -f -v myos
clear
cargo build
nvim
clear
cd .config/nvim
clear
cd ~
clear
cd .config/nvim
clear
rustlings hint hashmaps3
nvim
rustlings lsp
nvim
clear
rustlings hint options2
rustlings hint options3
clear
rustlings hint errors1
clear; rustlings hint errors2
clear; rustlings hint errors3
clear; rustlings hint errors4
clear; rustlings hint errors5
clear; rustlings hint errors6
clear; rustlings hint generics1
clear; rustlings hint taet
clear; rustlings hint traits3
nvim
rustlings watch
clear
clear; rustlings hint lifetimes1
cd workspace/
ls
cd rust
clear
ls
clear
lib
clear
book
clear
cargo new mind_museum
clear
nvim
cd mind_museum/
clear
nvim
..
ls
cd programming-rust-book/
clear
ls
cd mandelbrot/
clear
cd
..
cd programming-rust-book/
clear
ls
cd quickreplace/
clear
open
clear
cd ..
rm -r -f -v mind_museum/
clear
cd workspace/
clear
ls
clear
cd rust
cargo new open
clear
cd open
clear
cargo run
cargo run abc 123
nvim
clear; rustlings hint tests4
..
cd rust/
clear
ls
cd open/
clear
cargo run .
ls
clear
cargo run ./Cargo.toml
clear; rustlings hint iterators2
clear; rustlings hint iterators3
rustup default stable
clear
clear; rustlings hint iterators3
clear
cd workspace
clear
nvim
cd rust
clear
ls
clear; rustlings hint iterators4
cd Downloads/
clear
ls
type ls
ls
echo *
ls
ls -t
ls 0a
ls -a
clear
..
ls
cd Documents/
ls
..
cd Desktop/
ls
..
cd Pictures/
clear
ls
..
clear
ls
cd Applications/
ls
clear
..
ls
cd Library/
clear
ls
..
clear
ls
cd Applications/
clear
ls
cd
ls
cd
..
ls
cd Users
ls
cd ruan
cd Downloads/
ls
clear
..
ls
cd `Firmware files/`
ls
..
rm -r -f -v `Firmware files/`
clear
ls
ls -l
cd Downloads/
clear
ls -l
clear
..
ls ~/Downloads/
cd Downloads/
ls
clear
ls
cd
clear
ls -a
rm -r -f -v .dart-tool/
rm -r -f -v .vscode-insiders/
rm -r -f -v .vscode/
clear
ls -a
rm -r -f -v .yarnrc
rm -r -f -v .pyenv/
rm -r -f -v .python_history
rm -r -f -v .flutter
ls .Trash/
sudo ls .Trash/
cd .Trash/
ls
sudo ls
..
clear
ls -a
rm -r -f -v .angular-config.json
nvim .gitconfig
rm -r -f -v yarn.lock
rm -r -f -v package.json
rm -r -f -v package-lock.json
rm -r -f -v node_modules/
clear
ls
ls -t
clear
ls -a
cd .cache/
ls
rm -r -f -v tortoise/
cd huggingface/
ls
cd hub/
ls
...
ls
rm -r -f -v huggingface/
clear
ls
..
ls
clar
cleas
clear
ls 0a
clear
ls -a
cd .thumbnails/
ls
cd fail/
ls
..
cd large/
ls
ls -a
..
//
..
cd
clear
ls
clear
..
ls
cd Library/
ls
cd `Application Support/`
ls
ls -a
cd LogiOptionsPlus/
..
l
ls
ls -a
..
ls -a
cd Shared/
ls
rm -r -f -v Battle.net/
sudo rm -r -f -v Battle.net/
sudo rm -r -f -v Blizzard/
clear
ls -a
cd `Previously Relocated Items/`
ls
ls -a
cd Configuration/
ls
ls -a
cd private/
ls -a
cd etc/
ls -a
nvim shells.system_default
.....
ls
cd `Relocated Items/`
ls
cd Configuration/
ls
cd private/
ls
cd etc/
ls
ls -a
nvim shells.system_default
....
..
ls
cd `SC Info/`
ls
ls -a
..
ls
clear
..
ls
cd Applications/
ls
..
ls
cd Library/
ls
..
ls
cd bin
ls
..
ls
cd opt
ls
ls -a
..
cd usr
ls
cd ~
clear
cd workspace/
ls
cd rustlings/
clear
ls
clear
clear; rustlings hint iterators4
clear; rustlings hint box1
..
ls
cd Library/
cd `Application Support/`
ls
cd Microsoft/
ls
cd MAU2.0/
ls
rm `Microsoft AutoUpdate.app/`
rm -r -f -v `Microsoft AutoUpdate.app/`
sudo rm -r -f -v `Microsoft AutoUpdate.app/`
clear
ls -a
..
ls -a
rm -r -f -v MAU2.0/
..
ls
sudo rm -r -f -v Microsoft/
clear
..
cd LaunchDaemons/
ls
rm -r -f -v com.microsoft.autoupdate.helper.plist
sudo rm -r -f -v com.microsoft.autoupdate.helper.plist
ls
ls -a
..
cd LaunchAgents/
ls
clear
sudo rm -r -f -v com.microsoft.update.agent.plist
..
cd LaunchAgents/
ls
..
cd PrivilegedHelperTools/
ls
rm -r -f -v com.microsoft.autoupdate.helper
sudo rm -r -f -v com.microsoft.autoupdate.helper
clear
cd
clear
ls
cd workspace/
us
clear
ls
..
cd .config/nushell
clear
ls
$nu.HOME
cd $env.HOME
$env.HOME
ls
ls -a
nvim
cd
nvim $nu.config-path
vim
clear
clear; rustlings hint cow1
nvim
..
rustlings watch
cd rust
clear
ls
mkdir crust-of-rust
cd crust-of-rust/
mkdir smart-pointers-and-interior-mutability
cd smart-pointers-and-interior-mutability/
..
cargo new --lib pointers
cd pointers/
clear
nvim
..
ls
..
cd rustlings/
clear
clear; rustlings hint threads2
brew install nim
clear
cd .config/nvim
nvim
clear
nvim
go
clear
nvim $nu.env-path
go verseon
go
cd /
cd usr
cd local
cd go
cd bik
cd bin/
ls
nvim $nu.env-path
nvim $nu.env-path
go
clear
go version
clear
npm
npm -v
node -v
npm update
clear
cd
cd workspace
s
clear
ls
rm -r -f -v riscv-os/
cd coursera/
ls
cd introduction-to-programming/
ls
..
rm -r -f -v coursera/
clear
ls
rm -r -f -v laboratory/
clear
ls
mkdir go-htmx
cd go-htmx/
clear
go run main.go
clear
go run main.go
clear
nvim
go run main.go
clear
go run main.go
clear
go run main.go
clear
git init
git remote add origin https://github.com/ruan-molinari/go-htmx-study.git
git push -l
git push -u
git pull
git pull origin main
git push -u origin main
clear
 git add .
git commit -m "initial commit"
clear
git push -u origin main
clear
cd .config/nvim
nvim
go run main.go
clear
go run main.go
clear
go run main.go
clear
go run main.go
clear; go run main
clear; go run main.go
git add .
git commit -m "htmx basics"
git push
clear
beancount
bean-check
clear
ls
cd
cd workspace/
ls
py
pythoh
clear
cd
ls
cd Applications/
ls
ls -a
cd /
cd Applications/
ls
cd `Python 3.12/`
ls
cd `Python Launcher.app/`
ls
cd Contents/
ls
cd MacOS/
ls
..
cd usr
ls
cd bin
ls
cd py
..
cd System/
ls
Library/
cd Library/Frameworks/
ls
..
cd Library/Frameworks/
ls
cd Python.framework/
ls
cd python
l
ls
cd Versions/
ls
cd Current/
ls
cd bin
ls
..
ls
python
cd Current/
python
ls
cd bin
ls
python3
clear
py
py -h
clear
py -h
python -h
fnm -h
clear
pip -h
clear
ls
cd .config/
cd nvim/
clear
ls
nvim $nu.env-path
nvim
cd .config/
cd nvim
nvm
nvim
clear
nvim
clear
nvim
cd .local/
cd share/nvim/site/pack/
us
ls
rm -r -f -v packer
clear
clear
nvim
js
ls
cd after
ls
.
..
mv after/plugin/ lua/plugins/
cd lua/
ls
cd plugins/
ls
mv plugin/ ../plugin
..
ls
cd plugin/
ls
..
ls
rm -r -f -v plugins
mv plugin/ plugins
ls
cd plugins/
ls
clear
nvim
clear
tree-sitter -h
clear
nvim
clear
nvim
clear
nvim
vim
nvim
clear
nvim
clear
nvim
clear
nvim
clear
nvim
clear
nvim
clear
nvim
clear
nvim
clear
nvim
clear
nvim
clear
nvim
clear
nvim
clear
nvim
ls -a
clear
ear
clear
nvim
nvim
clear
nvim
clear
nvim
clear
:q
nvim
clear
nvim
clear
nvim
clear
nvim
cd Z
clear
cd ~
cd workspace/
ls
cd go-htmx/
nvim
clear
nvim
nvim
git add .
git commit -m "from packer to lazy"
git push
clear
nvim
clear
cd workspace/go-htmx/
nvim
..
clear
mkdir store
clear
cd store/
go mod init
go help mod init
go env
cd
cd go
ls
cd bin
ls
go mod init echo
go mod tidy
go mob init
go mod init
clear
go mod tidy
go mod init github.com/ruan-molinari
go mod tidy
clear
make
go get github.com/labstack/echo/v4
clear
nvim
go install github.com/a-h/templ/cmd/templ@latest
templ -h
templ
clear
go -h
go gopath
gopath
go help gopath
gireleaser -h
clear
goreleaser -h
brew install goreleaser/tap/goreleaser
goreleaser -h
clear
goreleaser build --snapshot --clean
cd
ls
cd go
ls
cd pkg
ls
cd mod
ls
cd github.com/
ls
..
ls
cd bin/
clear
ls
..
ls
cd bin
ls
clear
go install templ
cd /
ls
clear
cd
ls
go
go env
go env gopath
go env GOPATH
go env GOPATH | cd
cd | go env gopath
cd (go env gopath)
clear
cd (go env gopath).value
cd (go env gopath)
cd (go env GOPATH)
ls
go env
cd (go env GOROOT)
ls
cd pkg/
ls
..
ls
cd bin
ls
..
ls
clear
ls
cd ~
clear
ls
clear
go env
cd (go env GOENV)
cd Library/
cd `Application Support/`
cd go/
ls
cd telemetry/
ls
clear
cd
clear
go env
goreleaser build --snapshot --clean
cd (go env GOPATH)
cd bin
clear
ls
go run templ generate -include-version=false
go env
cd (go env GOROOT)
cd src/
ls
go run templ generate -include-version=false
..
clear
ls
cd bin
ls
.
..
cd lib
ls
templ
clear
ls
cd bin
ls
clear
cd (go env GOPATH)
ls
cd bin
ls
clear
go env
clear
templ
clear
templ
clear
templ
clear
go get https://github.com/a-h/templ
go get github.com/a-h/templ
clear
nvim
clear
nvim
make
clear
..
mv store/ ecommerce
cd ecommerce/
clear
ls
make
go mod tidy
go mod init
clear
go mod init github.com/ruan-molinari/ecommerce
make
go get github.com/a-h/templ
clear
make
clear
go get github.com/labstack/echo/v4
clear
nvim
clear
nvim
nvim
brew upgrade nvim
brew install nvim
brew -h
brew info nvim
brew info neovim
brew info nvim
clear
make
clear
clear
brew upgrade neovim
clear
brew update
brew install --HEAD neovim
clear
nvim
clear
make
clear
make
clear
make
clear
nvim
nvim .config/nvim/
cd .config/
cd nvim
clear
nvim
clear
nvim
clear
nvim
cd .conf
cd kitty/
nvim
clear
nvim
nivm
nvim
clear
nvim
clear
nvim
clear
nvim
clear
nvim
make
nvim
clear
nvim
nvim -v
clear
brew install --HEAD neovim
brew -h
brew doctor neovim
brew info neovim
nvim -h
cd /opt/homebrew/
ls
cd Cellar/
ls
cd neovim/
ls
clear
ls
neovim -h
nvim -h
neovim
nvim -v
cd HEAD-aa840ab/
ls
cd bin
ls
..
cd Library/
cd Taps/
cd homebrew/
ls
brew -h
brew uninstall neovim
clear
nvim
clear
brew install neovim
nvim -v
clear
nvim
cd
clear
cd workspace/
cd ecommerce/
clear
cd .config/
cd nvim/
clear
nvim
git add .
git commit -m "fixing plugins that weren't working properly after migration to lazy"
git push
clear
nvim
clear
nvim
clear
make
clear
make
clear
make
clear
make
clear
make
clear
docker -v
docker
brew install docker
clear
docker -v
docker
brew -h
brew doctor
clear
brew list docker
docker
brew uninstall docker
brew install docker
docker
man brew
docker25
brew list docker
cd /opt/homebrew/Cellar/docker/25.0.3/bin/
ls
docker
./docker
clear
,,
..
docker-compose
docker
clear
ls
..
ls
ls | where name.contains("docker")
ls | where name.contains(docker)
ls | where name =~ "docker"
cd
cd .docker/
ls
cd machine/
ls
..
clear
ls
ls -a
ls
docker
cd machine/
ls
..
clear
ls
cd contexts/
ls
..
clear
ls
cd run
ls
..
cd sca
ls
..
clear
ls
cd devenvironments/
ls
..
clear
dockes run
ls
cd run
ls
..
lc
clear
..
ls
ls -a
cd .docker/
clear
docker
clear
nvim
clear
nvim
go-blue
..
go install github.com/melkeydev/go-blueprint@latest
ls
mv ecommerce/ htmx-go
..
clear
go-blueprint create
cd ecommerce/
clear
go get github.com/markbates/goth
 clear\
clear
86400 * 30
8600 / 24
(86400 / 24) / 60
go get github.com/gorilla/sessions
nvim
go get github.com/gorilla/mux
clear
go get -v
go get -h
go build
go mod tidy
nvim
go mod tidy -h
go help mod tidy
clear
..
ls
cd htmx-go/
ls
go get github.com/nabowler
/
go get github.com/nabowler/echo-gothic
..
cd htmx-go/
make
go get github.com/a-h/templ
cd workspace/
ls
cd go-htmx/
ls
clear
..
ls
cd htmx-go/
ls
..
cd go-htmx/
make
clear
go mod tidy
nvim
clear
make
go run main.go
go build
make run
clear
nvim
go mod tidy
ls
clear
nvim
clear
go -h
go get github.com/a-h/templ
nvim
go mod tidy\
go mod tidy
clear
vim
nvim
go get github.com/a-h/templ
make
nvim
templ
templ generate
make
clear
nvim
make
nvim
clear
nvim
make run
clear
make run
make; make run
make urn
make run
clear
make run
clear
make
make run
clear
make
go-blueprint create
cg go-oauth/
cd workspace/
ls
..
ls
mv go-oauth/ workspace/go-oauth
cd workspace/go-oauth/
clear
make
make run
docker-compose 
docker-compose exec
docker-compose run
docker-compose run -h
ls
nvim
docker-compose run psql
make run
clear
go-blueprint -h
clear
clear
docker-compose run psql
docker-credentials-desktop
..
rm -r -f -v go-oauth/
go-blueprint --advanced
go-blueprint create --advanced
cd go-oauth/
templ generate
clear
nvim
make
make run
clear
ls
make docker-run
make clean
clear
make docker-compose.yml
make docker-run
cd .docker/
clear
ls
nvim config.json
make docker-run
nvim
make watch
clear
make all build
make run
clea
clear
templ generate
make run
clear
nvim
..
clear
mkdir go
cd go
clear
mkdir playground
cd playground/
clear
go
go main.go
go run main.go
clear
go run main.go
clear
nvim
clear
..
clear
ls
clear
cd estudo/
ls
go mod init estudo
clear
go main.go
go run main.go
clear
nvim
make
clear
make
clear
make
clear
make
ls
clear
cd go
clear
ls
..
cd workspace/
cd go
clear
ls
mkdir go-friend-crm
clear
cd go-friend-crm/
clear
ls
clear
mkdir cmd
go mod init go-frind-crm
clear
nvim
make
clear
make
clear
go get github.com/mattn/go-sqlite3
go mod tidy
go build
make build
clear
go mod tidy
nvim
 nvim
go mod tid;
go mod tidy
clear
nvim
make
go mod tidy
clear
make
clear
make
nvim
clear
make
clear
..
ls
mv go-friend-crm/ go-people-crm
clear
cd go-people-crm/
clear
ls
nvim
git init
git config --global init.defaultBranch main
git init
ls
ls -a
curl -o .gitignore # Created by https://www.toptal.com/developers/gitignore/api/go,macos
# Edit at https://www.toptal.com/developers/gitignore?templates=go,macos
### Go ###
# If you prefer the allow list template instead of the deny list, see community template:
# https://github.com/github/gitignore/blob/main/community/Golang/Go.AllowList.gitignore
#
# Binaries for programs and plugins
*.exe
*.exe~
*.dll
*.so
*.dylib
# Test binary, built with `go test -c`
*.test
# Output of the go coverage tool, specifically when used with LiteIDE
*.out
# Dependency directories (remove the comment below to include it)
# vendor/
# Go workspace file
go.work
### macOS ###
# General
.DS_Store
.AppleDouble
.LSOverride
# Icon must end with two \r
Icon
# Thumbnails
._*
# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent
# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk
### macOS Patch ###
# iCloud generated files
*.icloud
ls
ls -a
clear
curl -o .gitignore https://www.toptal.com/developers/gitignore/api/go,macos
ls -a
ls
ls -t
ls -h
ls -l
clear
ls
git add .
git -h
git info
git status
git commit -m "initial commit"
clear
git remote add origin https://github.com/ruan-molinari/go-people-crm.git
git push -u origin main
git help
git show
clear
git help
git push
ls
git config --global init.defaultBranch master
clear
ls
clear
nvim .gitignore
clear
nvim
..
mkdir interfaces
cd interfaces/
clear
go mod init interfaces
make
clear
make
makhe
make
clear
make
clear
cd .config/nvim
nvim
vim
nvim
clear
nvim
clear
nvim
nvim
nvim
clear
..
..
ls
cd estudo/
ls
make
clear
nvim
..
mkdir concurrency
cd concurrency/
nvim
go mod init concurrency
go run goroutines.go
nvim
go run main.go
clear
go run main.go
clear
make
clear
make
clear
make
clear
makne
clear
make
clear
make
clear
make
clear
make
clear
make
clear
nvim
make
clear
make
clear
make
clear
make
clear
..
clear
mkdir EmailN
cd EmailN/
clear
go mod init emailn
..
rm -r -f -v EmailN/
mkdir emailr
cd emailr/
go mod init emailr
clear
nvim
clear
go get github.com/rs/xid
nvim
cd .config/nvim
brew install tabbyml/tabby/tabby
tabby serve --device metal --model TabbyML/StarCoder-18
tabby -h
tabby download
tabby serve --device metal --model TabbyML/StarCoder-1B
tabby help
brew uninstall tabbyml/tabby/tabby
clear
node -v
clear
mkdir ./tabby-client
mkdir ./tabby-client .tabby-client
cd .tabby-client/
mkdir agent
cd agent/
clear
nvim config.toml
cd
node -h
node -c
node -C
node --check
$env.PATH
pwd
where
where node
node -v
node --path
node -h
clear
npm -h
npm -l
clear
ls -a
path node
which node
nvim
clear
nvim
clear
cd .tabby/
ls
..
cd .tabby-client/
ls
cd agent/
ls
nvim
nvim data.json
clear
cd .config/nvim
nvim
cd .config/kitty/
nvim
nvim
nvim
clear
nvim
cd workspace/
ls
cd rust/ls
cd rust
ls
clear
cargo new countdown
cd countdown/
clear
cargo run
cargo run
clear
cargo run
clear
cargo run
clear
cargo run
clear
cargo update create-tauri-app
cargo install create-tauri-app --locked
clear
..
ls
create-tauri-app -v
cargo create-tauri-app -v
cargo create-tauri-app pomodoro
cd pomodoro/
clear
nvim
clear
cargo tauri dev
clear
cargo run
clear
cargo run
clear
cargo run
clear
cargo run
clear
cd workspace/rust
us
..
ls
cd rustlings/
clear
ls
clear
nvim
cd
cd workspace
ls
cd rusp
cd rust
ls
clear
cd pomodoro
ls
clear
cargo run
clear
cargo run
clear
cargo run
cargo ru
clear
cargo run
ls
cd workspace
ls
cd go
ls
cd emailr/
clear
ls 
nvim
..
ls
clear
cargo new --lib stopwatch-rs
cd stopwatch-rs/
clear
ls
nvim
cd workspace/
ls
cd rust
ls
cd countdown
ls
nvim
cargo install zoxide --locked
cd $nu.env-path
cd $nu.config-path
$nu
ls
ls -a
z .config/nvim/
nvim $nu.env-path
ls
cd $nu.env-path
$nu
cd ../$nu.config-path
cd .config/nushell/
clear
cargo install --git https://github.com/ajeetdsouza/zoxide
nu -v
nu help
cargo update nushell
cargo install nushell
cargo -h
cargo --list
brew -l
brew -h
brew list
brew install nushell
clear
nvim
cargo check
clear
cargo check
clear
z .config/nvim
..
uls
us
cuiar
ls
clear
ls
cd open
ls
nvim
cargo new --lib testando123
cd testando123/
nvim
..
rm -r -f -v testando123/
clear
cargo test
clear
cargo test
clear
cargo check
clear
git remote add origin https://github.com/ruan-molinari/stopwatch-rs.git
git fetch
git add .
git commit -m "initial commit"
git push -u origin main
git push -u origin master
clear
git -h
nvim
clear
ls
ls -a\
ls -a
rm -r -f -v .git
clear
git remote add origin https://github.com/ruan-molinari/stopwatch-rs.git
git remote add origin https://github.com/ruan-molinari/stopwatch-rs.git\
git init
git remote add origin https://github.com/ruan-molinari/stopwatch-rs.git\
git add .
git commit -m "initial commit"
git push -u origin main
git push
git remote -h
git remote set-url https://github.com/ruan-molinari/stopwatch-rs.git
git remote set-url origin https://github.com/ruan-molinari/stopwatch-rs.git
git push
git branch -M main
git push -u origin main
ls
clear
z nvim
cd nvim
clear
nvim
cd nvim
nvim
git --status
git -h
git diff
clear
git add .
git commit -m "updating things"
..
git add .
git push
clear
git diff
clear
..
git add .
git commit -m "updating nushell and some other changens"
clear
git push
clear
cd nvim
clear
ls
..
cd
clear
cd nvim
ls
..
cd .config/nvim
ls
clear
cd
cd .config/nvim
ls
cd 
cd .config/nvim
clear
cd
cd nvim
ls
clear
nvim
clear
nvim
cd
cd nvim
ls
nvim test.norg
nvim
nvim test.norg
nvim
nvim test.norg
nvim
nvim
nvim test.norg
clear
nvim test.norg
clear
,,
..
cd nvim
git add .
git commit -m "added neorg extension"
git push
clear
cd go
ls
cd emailr
clear
go test
clear
go get github.com/go-playground/validator/v10
nvim
go run main.go
go mod tidy
go run main.go
go main.go
go run main.go
clear
go run main.go
clear
nvim
clear
cd
cd workspace/
clear
ls
cd memory_managemant_studies/
ls
nvim dynamic_array/
ls
nvim simple_calculator/
rm -r -f -v simple_calculator/
rm -r -f -v zig-calculator/
clear
ls
..
mv memory_managemant_studies/ data_structures
clear
cd data_structures/
ls
nvim dynamic_array/
ls
cd dynamic_array/
clear
nvim
ls
mv main.cpp ../dynamic_array.cpp
ls
clear
..
ls
nvim main.cpp
ls
rm -r -f -v dynamic_array/
clear
ls
clear
cmake main.cpp
cmake
cmake ./
cmake -h
clear
cmake
cmake -S .
mkdir src
mv dynamic_array.cpp src/List.cpp
..
mv data_structures/ DataStructures
cd DataStructures/
clear
nvim CMakeLists.txt
cmake
cmake -S .
ls
nvim
clear
brew install conan
cmake -v
cmake --version
conan remote add conan-center https://center.conan.io
conan install gtest
ls
rm -r -f -v tests
rm -r -f -v CMakeCache.txt
rm -r -f -v CMakeFiles/
rm -r -f -v main.cpp
clear
ls
cmake --version
nvim
nvim
..
ls
clear
mv DataStructures/
clear
cd DataStructures/
clear
nvim
clear
ls
cmake
cmake -S .
ls
mv CMakeFile.txt CMakeLists.txt
clear
cmake -S .
ls
cd CMakeFiles/
ls
..
cmake -h
cmake run
cmake
cmake .
ls
ls 0a
clear
ls -a
cd CMakeFiles/
ls
..
make
nvim Makefile
ls
nvim Makefile
clear
make clean
make
make run
make -h
clear
make
make -h
make -t
cmake --build
cmake --build .
ls
DataStructures
./DataStructures
cmake --build
cmake
ls
rm -r -f -v DataStructures
cmake
cmake ./CMakeLists.txt
ls
cmake ./CMakeLists.txt --build
cmake --help
clear
cmake --build CMakeFiles/
cmake --build
cmake --list-presets
clear
cmake
ls
cmake src/main.cpp
cmake --build src/main.cpp
cmake src/main.cpp
clear
ls
cmake --build .
ls
./DataStructures
cmake --build .
./DataStructures
clear
./DataStructures
cmake --build .
./DataStructures
cmake --build .
./DataStructures
cmake --build .
./DataStructures
clear\
clear
cmake --build .
./DataStructures
cmake --build .
make
make build
clear
./DataStructures
cmake --build .
./DataStructures
make DataStructures
./DataStructures
make
./DataStructures
clear
make
./DataStructures
brew install brew
clear
brew install boost
make clean
us
ls
clear
boost --version
Boost --version
brew install boost
boost
clear
cmake --build .
cmake
cmake -S .
conan --version
conan -h
conan install gtest
conan download gtest
conan new
conan new gtest
clear
cmake --version
cmake --help
clear
g++ --version
nvim
..
clear
mv DataStructures/ data-structures
cd data-structures/
clear
mv include/ src/include
cd
ls
cd src
ls
clear
ls
cd include/
ls
clear
..
clear
nvim
ls
rm -r -f -v CMakeFiles/
rm -r -f -v Makefile
ls
clear
ls
rm CMakeCache.txt
ls
clear
cmake
cmake --help
cmake -S . -B build
cmake -S . -B ./build
clear
cmake -S . -B ./build
clear
cmake -S . -B ./build
clear
cmake -S . -B ./build
clear
cmake -S . -B ./build
clear
cmake
ls
cmake -h
cmake -S . -B ./build --trace
clear
cmake -S . -B ./build --trace
clear
cmake -S . -B ./build --trace
ls
ctest
cmake -S . -B ./build --trace
nvim
cd nvim
cd workspace
ls
cd rust
ls
clear
ls
cd stopwatch-rs/
ls
cd target/
ls
,,
..
clear
..
clear
ls
cd stopwatch-rs/
ls
git fetch
clear
ls
git pull
clear
nvim
clear
cmake -S . -B ./build --trace
ls
cd build
ls
cd _deps/
ls
clear
cmake -S . -B ./build --trace
..
cmake -S . -B ./build --trace
clear
cmake -S . -B ./build --trace
nvim
cd build/
ctest
cmake --build build
..
cmake --build build
cmake -S . -B ./build; cmake --build build
cd build; ctest
..
clear
ls
cd build/
ls
..
clear
nvim
clear
nvim
git check-ignore
git init
git check-ignore
git check-ignore .
git check-ignore build
clear
git check-ignore -v **/*
ls
clear
clear
git remote add origin https://github.com/ruan-molinari/data-structures-cc.git
clear
ctest build
ctest -h
clear
cd build/
ctest
nvim
mv src/include/ include
ls
..
cmake -S . -B ./build; cmake --build build
cmake -S . -B ./build
cmake build -v
cmake -S . -B ./build; cmake --build build -v
nvim CMakeLists.txt
cmake -S . -B ./build; cmake --build build -v
cd
nvim
clear
ls
cd workspace/
ls
mkdir zig
cd zig
clear
zig -h
mkdir data-structures
clear
cd data-structures/
nvim
zid init --help
zig init --help
zig init --lib
zig init
ls
clear
nvim
..
rm -r -f -v data-structures/
clear
mkdir data-structures
cd data-structures/
zid init-lib
zig init-lib
clear
zig init-lib
clear
lr
clear
ls
zig init
ls
clear
ls
cd workspace/
cd ziglings.org/
clear
ls
zig
zig watch
clear
zig build
clear
zig build
cd workspace/zig
ls
cd data-structures/
clear
ls
nvim
cd workspace/
cd cpp
ls
cd data-structures/
clear
ls
zig build
zig run
zig
zig run
zig run .
zig run -h
zig run
clear
zig run
zig run -h
zig run src/main.zig
clear
zig run src/main.zig
cd workspace/data-structures/
cd
clear
cd workspace/zig/
clear
mkdir playgroung
mv playgroung/ playground
clear
cd playground/
nvim
zig run src/main.zig
nvim
clear
zig build
nvim
cd nvim
nvim
zig build
clear
zig build
nvim
clear
cd nvim
nvim
nvim
clear
cd nvim
nvim
cd workspace/data-structures/
clear
nvim
nvim
zig build
clear
zig build
clear
zig build
zig -v
zig --version
which zig
zig libc
zig version
clear
zig update
brew uninstall zig
which zig
cd | which zig
cd | which zig.path
cd .config/nushell/
ls
brew install zig
clea
clear
zig
zig version
clear
cd workspace/
cd zig/
clear
ls
cd data-structures/
clear
zig build run
zig run
zig build
clear
zig build run
ls
rm -r -f -v zig-cache/
zig init
zig init-lib
nvim
clear
zig build
zig build run
zig run
zig run main.zig
clear
zig run main.zig
nvim
clear
nvim
zig run main.zig
nvim
zig run main.zig
clear
zig run main.zig
cd nvim
nvim
clear
nvim
clear
zig run main.zig
clear
zig run main.zig
clear
zig run main.zig
clear
zig run main.zig
clear; zig run main.zig
zig run main.zig
clear; zig run main.zig
clear; zig run main.zig\
clear; zig run main.zig
clear; zig run main.zig\
clear; zig run main.zig
clear; zig run main.zig\
clear; zig run main.zig
git check-ignore -v **/*
git init
git check-ignore -v **/*
clear
git check-ignore -v **/*
clear
zig build
clear
zig build urn
zig build run
clear
zig build run
clear
zig build run
clear; zig run main.zig
ls
rm -r -f -v zig-cache
rm -r -f -v zig-out
zig build
ls
clear
zig run
zig run main.zig
clear
zig test
zig build test
clear
zig test src/dynamic_array.zig
nvim
clear
cd workspace/zig/
clear
cd workspace/
..
cd nvim
nvim
nvim data-structures/
clear
mkdir memory-management
cd memory-management/
zig init-exe
clear
cd
cd workspace/data-structures/
clear
ls
clear
git check-ignore -v **/*
clear
ls
git commit -m "implementing a simple dynamic array"
git add .
git commit -m "implementing a simple dynamic array"
git remote -h
git remote
git remote origin
git push -u origin main
git push -u origin
git push -u origin main
git branch
git branch -M main
git push -u origin main
git pull
git push -u origin main
git add .
git status
git
us
clear
ls
ls -a
rm -r -f -v .git
git init
git remote add origin https://github.com/ruan-molinari/data-structures-cc.git
git branch -M main
git add .
git fetch
gip pull
git pull
clear
git pull origin main
clear
git commit -m "implementing a simple dynamic array"
git push -u origin main
clear
nvim
..
clear
cd memory-management/
clear
nvim
..
clear
cd data-structures/
clear
ls
..
cd memory-management/
clear
ls
nvim src/
nvim
git init
nvim .gitignore
clear
ls
zig build run
zig build test
zig test
zig build test
ls
zig build test --helf
zig build test --help
zig build test all
clear
zig build test all
zig build
zig build -h
clear
ls
zig build test
nvim
clear
clearclear
clear
clea
clear
clear
ls
..
ls
cd data-structures/
clear
ls
clear
zig build test
zig test src/dynamic_array.zig
clear
zig run main.zig
clear
zig run main.zig
clear
zig run main.zig
zig run main.zig\
zig run main.zig
clear
zig run main.zig
clear
zig run main.zig
clear
zig run main.zig
clear
zig run main.zig
clear
git init
git remote add origin https://github.com/ruan-molinari/data-structures.git
git branch -M main
git add .
git commit -m "implementing basic functionalities of a dynamic array"
git push
clear
brew install avr-binutils avr-gcc avrdude
clear
brew tap osx-cross/avr
brew install avr-binutils avr-gcc avrdude
python
clear
py
clear
cd workspace/
clar
clear
cargo generate --git <https://github.com/Rahix/avr-hal-template.git><\n>
cargo install cargo-generate
clear
cargo generate --git <https://github.com/Rahix/avr-hal-template.git>
cargo generate --git https://github.com/Rahix/avr-hal-template.git
clear
ls
cd rust-x-arduino/
clear
cd workspace/rust-x-arduino/
clear
cd workspace/rust-x-arduino/
..
cd
cd workspace/
nvim
clear
cd rust/
ls
nvim stopwatch-rs/
clear
cd nvim
nvim src/main.rs
nvim
cargo build
clear
cargo build
clear
cargo build
clear
ls
cd target/
ls
cd avr-atmega328p/
ls
clear
ls
ls -a
clear
cd debug/
clar
clear
ls
nvim
clear
lsub
claear
clear
lsusb
clear
brew install lsusb
clear
lsusb
clear
lsusb
....
clear
cargo run
lsusb
cargo run
lsusb -h
lsusb -d
lsusb -p
lsusb -t
lsusb
clear
cargo run
clear
lsusb -t
lsusb
cargo run
clear
cargo run
cargo build
cargo run
clear
ls
rm -r -f -v target/
clear
ravedude uno -cb 57600 -P /dev/ttyUSB0
clear
cargo build
clear
cargo run
cargo build
clear
cargo run
$nu
$env
clear
export
export RAVEDUDE_PORT=/dev/ttyUSB0
clear
which ravedude
clear
cargo run
brew install ravedude
cargo run
brew uninstall ravedude
clear
cargo install ravedude
clear
cargo run
clear
cargo run
cargo run -c
cargo run
clear
cargo run
ravedude -c
ravedude uno -c
brew -h
brew install avr-core
brew install avrdude
brew reinstall avrdude
brew install avr-binutils avr-gcc avrdude
avrdude -h
clear
cargo run
avrdude -h
avrdude -C
which avrdude
cd /opt/homebrew/bin/avrdude
cd /opt
cd homebrew/
cd bin/
cd avrdude
ls
..
clear
cd
clear
avrdude -h
cd
ls -a
clear
cd usr/local/etc
cd /usr/local/etc
cd /usr/local
ls
clear
cd
cd .config
ls
nvim starship.toml
clear
ls
rm -r -f -v yarn
rm -r -f -v flutter
clear
ls
cd git
ls
..
clear
cd git
ls -a
nvim
ls
ls -a
..
ls -a
clear
..
clear
cargo run
avrdude -h
ls -a
avrdude
brew uninstall avrdude
brew install avrdude --HEAD
brew install avrdude
clear
cargo run\
clear
cargo run
avrdude -c
avrdude -c -h
avrdude -c?
clear
avrdude -C?
avrdude -C ~/.avrdude
avrdude -c?
avrdude -c arduino
lsusb
avrdude -c arduino -P /dev/ttyUSB1
libserialport
clear
cargo run
ravedude uno -cb 57600 -P /dev/ttyUSB1 target/avr-atmega328p/debug/rust-x-arduino.elf -C ~/.arvdude
clear
ls -a
clear
brew uninstall avrdude
avrdude
clear
cargo +stable install ravedude
ravedude
avrdude
clear
brew install avrdude
clear
ls
clear
cargo run
avrdude -h
ravedude -h
ls -a
which avrdude
clear
ls
rm test.norg
clear
cd workspace/
cd data-structures/
nvim
clear
cd
cd zig
cd
cd ziglings
cd zig
cd data-structures/
clear
zig run main.zig
clear
zig run main.zig
clear
zig run main.zig
clear
zig run main.zig
clear; zig run main.zig
nvim
clear
fnm -h
fnm list
fnm list-remote
fnm install v21.6.2
node -v
fnm
fnm list
fnm default 21
fnm default
fnm -v
node -v
clear
ng -v
clear
npm install -g @angular/cli
cjnar
clear
clear
cd
cd nvim
ls
cd workspace/
clear
ls
nvim index.html
rm index.html
clear
ls
rm -r -f -v ecommerce/
cd angular/
clear
ls
clear
ng new
clear
fnm install 20
fnm default 20
fnm uninstall 21
node -v
clear
ng new
clear
npm install -g @angular/cli
clear
lls
clear
ls
clear
ng new
clear
cd model-application/
clear
ls
npm install
npm set registry=https://registry.npmjs.org/
clear
npm i
clear
npm serve
nvim
cd nvim
ear
clear
ls
ng serve
clear
ls
clear
cd workspace
clear
ls
nvim go-htmx
nvim htmx-go/
cd htmx-go/
clear
git init
clear
git remote add origin https://github.com/ruan-molinari/go-htmx-study.git
git branch -M main
clear
git add .
git commit -m "implementing basic functionalities and structure"
git push -u origin main
git push -u origin main -f
cd nvim
clear
git add .
git commit -m "adding pluging nvim-ts-autotag for html tag complition"
git push
clear
clear
nvim
clear
git pull
clear
..
ls
mv go-htmx/ go/htmx-study
mv go-oauth/ go/oauth-study
clear
ls
mv rust-x-arduino/ rust
mv rustlings rust
cd rust
ls
..
clear
ls
mv ziglings.org/ zig
ls
clear
cd htmx-go/
ls
..
clear
ls
cd go
ls
nvim htmx-study/
rm -r -f htmx-study/
ls
..
clear
lus
clear
ls
mv htmx-go/ go/go-htmx-study
clear
ls
cd python/
ls
rm -rf `First Project/`
ls
..
clear
rm -rf python/
clear
ls
cd go
clear
..
clear
ls
go-blueprint create --advanced
clear
ls
clear
ls
cd web-commerce/
clear
mongodb
clear
brew install postgresql@15
clear
nvim
cd workspace/
cd go
clear
ls
cd go-htmx-study/
cluear
clear
ls
go mod tidy
clnear
clear
docker-compose
docker-compose run
docker-compose run psql
clear
..
ls
clear
cd go
clear
nvim gRPC-study
ls
clear
mkdir calculator-gRPC
clear
ls
clear
cd calculator-gRPC/
clear
ls
go init
go mod init calculator-api
ls
rm go.mod
go mod init calculator-gRPC
clear
go install google.golang.org/protobuf/cmd/protoc-gen-go
go get google.golang.org/protobuf/cmd/protoc-gen-go
go get google.golang.org/grpc/cmd/protoc-gen-go-grpc
clear
ls
protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative calculator/calculator.proto
go install google.golang.org/protobuf/cmd/protoc-gen-go
go install google.golang.org/grpc/cmd/protoc-gen-go-grpc
protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative calculator/calculator.proto
go -h
go protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative calculator/calculator.proto
go environment
go gopath
gopath
clear
go help
go help install
$env
clear
cd
cd nushell
clear
ls
go help install
go help gopath
go help environment
go
clear
nvim
ls
mkdir proto
mv calculator/calculator.proto proto/calculator.proto
clear
ls
clear
nvim
brew install protobuf
clear
nvim Makefile
make generate
clear
nvim
go get google.golang.org/grpc
clear
nvim
rm go.mod
ls
rm go.sum
go mod init
go mod init github.com/ruan-molinari/calculator-gRPC
clear
go mod tidy
go get google.golang.org/grpc
clear
nvim
make generate
clear
go run server/main.go
clear
go run server/main.go
clear
go run server/main.go
clear
brew install grpcui
man brew
clear
make run
clear
make run -j
make run -j2
make run -j
clear
grpcui --plaintext localhost:8080
go run server/main.go
clear
grpcui --plaintext localhost:8000
go run server/main.go
clear
make run -j
clear
ls
clear
clear
grpcui --plaintext localhost:8000
go -v
go version
docker search
docker-search
clear
which docker
clear
..
cd calculator-gRPC/
ls
ls -a
cd .docker/
clear
ls
cd buildx/
ls
..
clear
..
ls
ls -a
nvim .zshrc
clear
cd Library/
ls
cd Containers/
ls
clear
ls
cd com.docker.docker/
ls
clear
ls
ls -a
cd Data/
ls
cd
ls
cd Library/Containers/com.docker.docker/Data/vms/
ls
cd 0
clear
ls
cd data/
ls
..
clear
cd
clear
ls
cd Applications/
cd /
cd Applications/
cd Docker.app/
cd Contents/
ls
cd Resources/
ls
cd bin
clear
ls
cd nushell
docker -h
clear
docker search
docker search alpine
docker search golang
docker -h
docker search bookworm
docker search alpine
docker search ubuntu
go run server/main.go
clear
docker build
clear
docker build
clear
docker build .
make generate\
make generate
clear
make generate
go get -u google.golang.org/grpc
go get -h
go help get
clear
go install google.golang.org/grpc
go install github.com/golang/protobuf/protoc-gen-go
clear
make generate
protoc-gen-go
clear
cd nushell
go
clear
protoc-gen-go
clear
make generate
protoc
clear
make generate
go get -u github.com/golang/protobut/{proto,protoc-gen-go}
go get -u github.com/golang/protobut/protoc-gen-go
go get -u github.com/golang/protobuf/protoc-gen-go
go get -u google.golang.org/protobuf
go get -u google.golang.org/protobuf/protoc-gen-go
go get -u google.golang.org/protobuf/proto
go get -u google.golang.org/protobuf/protoc-gen-go
clear
make generate
go get -u google.golang.org/protobuf/cmd/protoc-gen-go
clear
make generate
go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest
clear
make generate
clear
go get -u google.golang.org/protobuf/cmd/protoc-gen-go
go install google.golang.org/protobuf/cmd/protoc-gen-go<\n>
go get -u google.golang.org/grpc/cmd/protoc-gen-go-grpc<\n>
go install google.golang.org/grpc/cmd/protoc-gen-go-grpc<\n>
clear
make generate
cd | which go
cd | which go.command[0]
cd | which go.command
cd | which command = go
cd | which command == go
cd | which go | command = go
cd usr/local/go/bin/go
ls
cd /usr/local/go
cd bin/go
cd bin
ls
clear
cd
clear
cd go
ls
cd bin
ls
clear
$env.GOPATH
$env.PATH
$env.GOPATH
$env.PATH
nvim
make generate
clear
nvim
go mod tidy
make gene
make generate
clear
make generate
clear
nvim
clear
make run\
make run
clear
go run client/main.go
clear
go run client/main.go
make generate
clear
go run client/main.go
go run client/main.go --verbose
go run client/main.go -verbose
go run client/main.go
go run server/main.go
clear
go run server/main.go
clear
make generate
clear
git init
clear
git remote add origin https://github.com/ruan-molinari/calculator-gRPC.git
git branch -M main
git pull
git pull origin main
ls
ls -a
git add .
git commit -m "implementing simple calculations using gRPC"
git push -u origin main
clear
cd
cd workspace/
ls
cd tauri/
clear
ls
cd pomodoro/
clear
rustup toolchain list
cd rust
ls
cd rust-x-arduino/
clear
nvim
rust-analyzer ==version
rustup toolchain default stable
rustup toolchain
rustup default
rustup default stable
nvim
rustup default
rustup toolchain
clear
rustup update
clear
cd nvim
nvim
cd nvim
nvim
nvim
rustup toolchain update nightly
cd
ls
cd .cargo/
clear
ls
cd bin
ls
..
ls
clear
cd
cd .rustup/
ls
cd toolchains/
char
clear
ls
cd stable-aarch64-apple-darwin/
clear
ls
cd bin
ls
..
ls
..
ls
cd nightly-aarch64-apple-darwin/
ls
cd bin
ls
..
ls
cd libex
cd libexec/
clear
ls
ruspub component add rust-src
rustup component add rust-src
clear
rustup component add rust-src
rustup component add rust-analyzer
rustup help component
rustup help component add
rustup component add rust-src --toolchain nightly
rustup component add rust-analyzer --toolchain nightly
rustup component add --toolchain nightly --target rust-src
rustup component add --toolchain nightly rust-src
rustup component add --toolchain nightly rust-analyzer
rustup default nightly
rustup component add rust-analyzer
rustup default stable
clear
rustup -h
rustup component -h
rustup component list
clear
ls
nvim `go bin/`
cd `go bin/`
ls
ls -a
..
clear
rm -rf `go bin/`
rm -r -f -v `go bin/`
clear
cd `go bin/`
ls
rm -r -f -v pkg/
cd pkg/
ls
cd mod/
ls
rm -r -f -v github.com/
cd github.com/
ls
cd golang/
ls
rm -f -f -v protobuf@v1.5.3/
rm -r -f -v protobuf@v1.5.3/
ls
sudo rm -r -f -v protobuf@v1.5.3
clear
cd
ls
sudo rm -r -f -v `go bin`
clear
ls
cd go
ls
cd bin
ls
.
..
clear
cd pkg/
ls
$env.GOPATH
clear
cd
clear
ls
ls -a
rm -rf tabby-client/
clear
lls
ls
cd workspace/
ls
cd go
claer
ls
..
ls
clear
cd web-commerce/
clear
ls
clear
nvim
clear
..
ls
clear
cd go
mkdir microservices
cd microservices/
clear
ls
go mod init github.com/ruan-molinari/go-microservices
clear
go run main.go
curl -v localhost:55
clear
clear
curl -v localhost:55
go run main.go
clear
curl -d poppolli localhost:55
go run main.go
clear
clear
curl -d poppolli localhost:55
curl -d auau localhost:55
cuiar
clear
git init
git remote add origin https://github.com/ruan-molinari/go-microservices.git
git branch -M main
git add .
clear
ls
rm -rf .git
clear
git init
git remote add origin https://github.com/ruan-molinari/go-microservices.git
git branch -M main
git add .
git commit -m "starting a server and basic request-response handling"
git push -u origin main
git pull origin main
git push -u origin main
git push -u origin main -f
clear
ls
ls -a
git pull
clear
cd nvim
nvim
nvim
go run main.go
clear
go run main.go
clear
make
which go
make
clear
make
clear
make
curl -d auau localhost:55
nvim
clear
mae
make
clear
curl -d auau localhost:55/goodbye
make
clear
curl -d auau localhost:55/goodbye
make
clear
clear
git add .
git commit -m "refactoring the structure and enhancing server configuration"
git push
clear
cd nvim\
cd nvim
clear
nvim
nvbim
clear
nvim
git add .
git commit -m "adding linting and formatting"
clear
git puth\
git push
clear
cd nvim
curl localhost:55
make
clear
git add .
git commit -m "making a rest api"
git push
clear
cd
ls
clear
diskutil list
cd Downloads/
ls
rm `Unconfirmed 346111.crdownload`
rm `Unconfirmed 902436.crdownload`
rm `Unconfirmed 939746.crdownload`
rm AppFlowy-0.4.3-macos-universal.dmg
ls
rm nvim-macos/
rm -rf nvim-macos/
ls
rm `Calibre 7.5.1.dmg`
rm `Neovim Install macOS.gz`
clear
ls
nvim `Brazil State Non-Natural Death.webp`
rm `Brazil State Non-Natural Death.webp`
clear
ls
diskutil list
subo unmount /dev/disk4
sudo unmount /dev/disk4
sudo umount /dev/disk4
sudo umount /dev/disk4s1
diskutil unmount
sudo diskutil unmount /dev/disk4s1
diskutil list
sudo umount /dev/disk4s1
cd /dev/disk4
cd /dev
ls
..
ls
clear
ls
cd Volumes/
ls
..
cd dev
ls
cd disk4
cd disk4s1
ls
cd disk4s1
alias cd = cd
cd disk4s1
cd nushell
cd /dev
..
ls
cd Volumes/
cd disk4s1
cd disk4
clear
ls
..
ls
cd dev
ls
cd disk4
cd disk4s1
clear
ls
clear
clear
ls
sudo dd if=Manjaro_KDE_23.1.iso of=/dev/rdisk4s1 bs=1m
sudo dd if=`Manjaro KDE 23.1.iso` of=/dev/rdisk4s1 bs=1m
ls -a
ls -l
ls -t
lsa
brew install lsa
lsd
clear
mv `Manjaro KDE 23.1.iso` manjaro.iso
sudo dd if=manjaro.iso of=/dev/rdisk4s1 bs=1m
ls
sudo umount /dev/disk4s1
sudo dd if=manjaro.iso of=/dev/rdisk4s1 bs=32M
sudo dd if=manjaro.iso of=/dev/rdisk4s1 bs=32M status=progress
diskutil eject /dev/disk4
brew install c
clear
brew install wimlib
clear
diskutil list
diskutil eject /dev/disk5
diskutil eraseDisk MS-DOS WINDOWS11 GPT /dev/disk4
clear
cd
clear
rsync -vha --exclude=source/install.wim /Volumes/CCCOMA_X64FRE_EN-GB_DV9/* /Volumes/WINDOWS11/
rsync -vha --exclude=sources/install.wim /Volumes/CCCOMA_X64FRE_EN-GB_DV9/* /Volumes/WINDOWS11/
clear
z nvim
nvim
wimlib-imagex split /Volumes/CCCOMA_X64FRE_EN-GB_DV9/sources/install.wim /Volumes/WINDOWS11/sources/install.swm 3000
clear
diskutil list
clear
diskutil eraseDisk MS-DOS WINDOWS11 GPT /dev/disk4
diskutil list
diskutil eraseDisk MS-DOS WINDOWS11 GPT /dev/disk4
diskutil list
clear
diskutil list
diskutil eraseDisk MS-DOS "WIN11" MBR /dev/disk4
diskutil list
clear
hdiutil mount `Downloads/Windows 11 23H2 English x64.iso`
rsync -vha --exclude=sources/install.wim /Volumes/CCCOMA_X64FRE_EN-GB_DV9/* /Volumes/WIN11/
cd /Volumes/WIN11/sources/
ls
clear
cd
clear
wimlib-imagex split /Volumes/CCCOMA_X64FRE_EN-GB_DV9/sources/install.wim /Volumes/WIN11/sources/install.swm 3800
diskutil eject /dev/disk4
nvim
git add .
clear
git commit -m "implemented a theme hashmap to only install the active theme on lazy"
git push
clear
curl -v localhost:55 "{"id": 1, "name": "Soap", "description": "for the wicked" }"
curl -v localhost:55 '{"id": 1, "name": "Soap", "description": "for the wicked" }'
curl -v localhost:55 -d '{"id": 1, "name": "Soap", "description": "for the wicked" }'
make
clear
make
clear
clear
curl -v localhost:55 -d '{"id": 1, "name": "Soap", "description": "for the wicked" }'
make
clear
curl -v localhost:55 -d '{"id": 1, "name": "Soap", "description": "for the wicked" }' -XPUT
curl -v localhost:55 -d '{"id": 1, "name": "Soap", "description": "for the wicked", "price": 0.99 }' -XPUT
make
clear
curl -v localhost:55/1 -XPUT -d '{"name": "Soap", "description": "for the wicked", "price": 0.99 }'
make
clear
clear
curl -v localhost:55/1 -XPUT -d '{"name": "Soap", "description": "for the wicked", "price": 0.99 }'
make
clear
curl -v localhost:55/1 -XPUT -d '{"name": "Soap", "description": "for the wicked", "price": 0.99 }'
make
clear
clear
curl -v localhost:55/1 -XPUT -d '{"name": "Soap", "description": "for the wicked", "price": 0.99 }'
make
clear
clear
curl -v localhost:55/1 -XPUT -d '{"name": "Soap", "description": "for the wicked", "price": 0.99 }'
clear
make
clear
curl -v localhost:55/1 -XPUT -d '{"name": "Soap", "description": "for the wicked", "price": 0.99 }'
curl -v localhost:55
jq
clear
git add .
git commit -m "adding more request methods"
git push
clear
brew install jq
clear
brew install jq
clear
make
clear
mke
clear
put localhost:55/1 | open data.json | from json | get products[0] | to json
http put localhost:55/1 | open data.json | from json | get products[0] | to json
clear
open data.json | from json | http put localhost:55/1 | get products[0] | to json
open data.json | from json | http put localhost:55/1 products[0] | to json
open data.json | from json | http put localhost:55/1 products[0]
open data.json | from json | http put localhost:55/1 | get products[0]
open data.json
open data.json | get products[0]
open data.json | get products
open data.json | get products where id == 1
open data.json | get products | where id == 1
http put localhost:55/1 | open data.json | get products | where id == 1
http put localhost:55/1 | open data.json | get products | where id == 1 | to json
http put localhost:55/1 (open data.json | get products | where id == 1 | to json)
http get localhost:55
http get http://localhost:55
http put http://localhost:55/1 (open data.json | get products | where id == 1 | to json)
open data.json | get products | where id == 1 | to json
open data.json | get products 1 | to json
open data.json | get products.1 | to json
open data.json | get products.0 | to json
http put http://localhost:55/1 (open data.json | get products.0 | to json)
http get http://localhost:55
clear
z nvim
z nushell
nvim
ls
clear
ccd workspace/
clear
ccd nvim
clear
cd nvim
clear
nvim
clear
nvim
git add .
git commit -m "fixing nushell language support"
git push
clear
nvim
clear
make
clear
go get github.com/gorilla/mux
go get -h
go help get
clear
go get -u github.com/gorilla/mux
clear
cd nushell
cd .config
ccd .config
cd
cd .config/
cd nushell/
clear
cd nvim
http get http://localhost:55
make
http put http://localhost:55/1 (open data.json | get products.0 | to json)
clear
http put http://localhost:55/1 (open data.json | get products.0 | to json)
http get
http get http://localhost:55
clear
make
http post http://localhost:55 (get data.json | from json | get products.1 | to json)
http post http://localhost:55 (open data.json | get products.1 | to json)
http post http://localhost:55 (open data.json | get products.0 | to json)
open data.json | get products.0 | to json
clear
clear
http post http://localhost:55 (open data.json | get products.0 | to json)
http get http://localhost:55
make
clear
http post http://localhost:55 (open data.json | get products.0 | to json)
http get http://localhost:55
http put http://localhost:55/1 (open data.json | get products.0 | to json)
http get http://localhost:55
clear
make
clear
git add .
git commit -m "added gorilla framework, refactoring, and implementing middlewares"
clear
git push
clear
..
clear
ls
cd
clear
ls
clear
cd workspace/angular/
clear
ls
clear
ng
ng -h
ng -v
ng --version
ng --help
ng version
ng update
clear
nd new
ng new
clear
ls
cd ngrx-signals/
clear
ls
clear
ng add ngrx/signals
ng add @ngrx/signals
clear
ng add @ngrx/signals@latest
cd nvim
nvim
clear
ng serve
clear
ng serve
clear
ls
ls -a\
ls -a
git remote add origin https://github.com/ruan-molinari/ngrx-signals-study.git
git branch -M main
git add .
git commit -m "implementing basic structure of NgRx/signals"
git push -u origin main
clear
git commit -m "moving store structure to a separate file"
git add .
ng serve
git commit -m "moving store structure to a separate file"
git push
clear
nvim
clear
nvim
nvim
clear
go get -u github.com/go-playground/validator
clear
cd kitty
cd .config/
cd kitty/
clear
clear
cd kittty
cd .config/kitty/
clear
cd workspace/
clear
ls
cd go
ls
cd emailr/
clear
go test
go test data/producsr_test.go
clear
http post http://localhost:55 (open data.json | get products.0 | to json)
git add .
git commit -m "data validation and testing"
clear
make
clear
nvim
nvim
cd nvim
nvim
clear
nvim
cd kitty
cd .config/kitty/
clear
cd workspace/
cd go
ls
cd microservices/
clear
brew install fantasque-sans
cd .config/kitty/
clear
nvim
clear
cd microservices
clea
rclear
clear
nvim
clear
cd workspace/
clear
cd go
cd microservices/
clear
http get https://www.gamerpower.com/api/giveaways?platform=steam&type=loot&sort-by=popularity
clear
cd go
mkdir junkie-juegos
cd junkie-juegos/
clear
go mod init github.com/ruan-molinari/junkie-juegos
clear
go run main.go
clear
go run main.go
clear
http get https://www.gamerpower.com/api/giveaways?platform=steam&type=games
http get https://www.gamerpower.com/api/giveaways?platform=steam
clear
go run main.go
http get https://www.gamerpower.com/api/giveaways?platform=steam
go run main.go
clear
go run main.go
clear
go run main.go
clear
http get https://www.gamerpower.com/api/giveaways?platform=steam | filds
http get https://www.gamerpower.com/api/giveaways?platform=steam | fields
http get https://www.gamerpower.com/api/giveaways?platform=steam
http get https://www.gamerpower.com/api/giveaways?platform=steam | columns
clear
go run main.go
nvim
clear
go run main.go
clear
go run main.go
clear
go run main.go
clear
go run main.go
clear
go run main.go
go run main.go | to json
go run main.go | from json
clear
nvim
go mod tidy
clear
git init
git add .
git remote add origin https://github.com/ruan-molinari/junkie-juegos.git
git branch -M main
git commit -m "requesting data from Gamerpower.com"
clear
git push -u origin main
clear
ls
clear
ls
which nu
brew install nushell
brew -h
brew list
brew -h
brew search --casks '*'
clear
brew search --casks '*'
brew search --casks /*/
clear
for cask in $(brew search); do<\n>    brew cask info $cask;<\n>done
brew search
brew search --casks
for cask in (brew search --casks '*') 
brew search --casks '*' | to json
brew search --casks '*' | from json
clear
brew search --casks '*' | append
append (brew search --casks '*')
append (brew search --casks '*') | to json
nu version
nu -v
clear
ps
clear
ps -l
clear
ps -h
ps | sort-by mem | last 5
bm -h
bm
clear
gs
clear
cd nushell
clear
nvim
cd
cd nvim
ls
clear
cd
clear
ls
cd microservices
clear
nvim
ls
ls | sort-by size > 500b
ls | sort-by size > 500B
ls | sort-by size > 500 b
ls | sort-by size > 500 B
ls | sort-by size > 500kb
ls | sort-by size | reverse
clear
cd
cleaar
clear
sys
ps | sort-by mem | last 10
ps | sort-by c dd| reverse
ps | sort-by mem | reverse
clear
append (brew search --casks '*') | each { |cask| brew cask info $cask }
brew -h
append (brew search --casks '*') | each { |cask| brew info cask $cask }
clear
brew outdated
brew uninstall yarn
brew uninstall pyenv
brew update
brew updrade
brew upgrade
brew install wezterm
brew uninstall wezterm
help commands
help -f parsing
help -f use
help use
clear
help -f path
help -f table
clear
append (brew search --casks '*') | lenght
append (brew search --casks '*') | length
append (brew search --casks '*')
append | brew search --casks '*'
brew search --casks '*'
append | brew search --casks '*'
append (brew search --casks '*')
append (brew search --casks '*') | columns
append (brew search --casks '*') | rows
append (brew search --casks '*') | row
help -f object
help -f table
append (brew search --casks '*') | flatten
help -f type
append (brew search --casks '*') | describe
append (brew search --casks '*') | .1
help -f use
append (brew search --casks '*') | each { |it| append $it }
append (brew search --casks '*') | to json
help append
help -f table
help -f rows
brew search --casks '*' | compact
brew search --casks '*' | compact | length
help -f rows
help split row
brew search --casks '*' | split row -r '\s'
brew search --casks '*' | split row -r '\s' | save | save "casks.txt"
brew search --casks '*' | split row -r '\s' | save "casks.txt"
ls
nvim casks.txt
rm casks.txt
clear
ls
clear
help reduce
ls | each { |it| <\n>$it.name<\n>}
ls | each { |it| <\n>cd $it.name<\n>}
ls | each { |it| <\n>cdd $it.name<\n>}
ls | each { |it| <\n>ccd $it.name<\n>}
cd nushell
ls | each { |it| ccd $it.name; ls | length }
ls
ls | each { |it| $it.name }
ls | each { |it| ccd $it.name }
ls | each { |it| (ls $it.name | length) }
clear
cd nvim
nvim
clear
cd
cd nvim
clear
clear
cd microservices
clear
nvim
git add ./lua/plugins/lualine.lua
git commit -m "configuring lualine plugin"
git push
clear
git status
git add ./lua/plugins/colorscheme.lua
git commit -m "adding colorschemes"
git status lua/plugins/treesitter.lua
clear
git push
nvim
clear
nvim
nvim 
nvim
clear
nvim
clear
cd kitty
cd .config/kitty/
nvim
clear
cd nvim
clear
nvim
cd 
cd .config/kitty/
clear
nvim
cd .config/
cd kitty/
nvim
cd .config/kitty/
clear
cd nvim
nvim
clear\
clear
nvim
cd theme.conf
ls
cd kitty-themes/
ls
clear
git
git status
git show
clear
git remote
git remote origin
git remote get-url origin
clear
..
clear
nvim
nvim
clear
nvim
clear
ls
clear
brew install wezterm
clear
clear
ls
ls -a
cd .dotfiles/
ls
cd
cd .config/
ls
cd
cd .dotfiles/
ls -a
nvim .wezterm.lua
ls -a
..
clear
cd
clear
ln -s .dotfiles/.wezterm.lua ./.wezterm.lua
ls -a
cd .dotfiles/
clear
nvim
clear
ls
mkdir wezterm
cd wezterm/
clear
ls
clear
nvim wezterm.lua
ls
cd nvim
nvim
nvim .wezterm.lua
rm .wezterm.lua
ls
ln -s .dotfiles/wezterm/ .config/wezterm
clear
nvim wezterm.lua
cd .config/
ls
cd wezterm
ccd wezterm
rm wezterm
help ln
help -f sym
cd
clear
ls
..
ls
rm .wezterm.lua
clear
ln -s ./.dotfiles/wezterm/ ./.config/wezterm/
ln -s ./.dotfiles/wezterm/ ./.config/wezterm
ls .config/
nvim .config/wezterm
cd .config/
ls
rm wezterm
ls
..
brew uninstall conan
ls -a
rm .conan2/
rm -rf .conan2/
clear
cd .config/
clear
ls
ln -s ~/.dotfiles/wezterm/ wezterm
ls
clear
cd
cd .config/
clear
ls
cd wezterm/
clear
ls
nvim wezterm/
ls
cd Pictures/
ls
cd nvim
nvim
cd kitty
clear
..
ls
clear
ls
clear
cd
clear
cd .config/
cd kitty/
clear
nvim
cd nvim
ls
clear
nvim
nvim
nvim
clear
ls
clear
ls
cd .config/
ls
clear
cd nvim
ls
..
cd kittty
..
cd
clear
cd .config/kitty/
clear
cd nvim
clear
ls
nvim
nvim
clear
nvim
clear
nvim
ls
clear
ls
cd nvim
nvim
cd
cd .config/kitty/
cd neovim
cd nvim
nvim
nvim
clear
nvim
clear
cd nvim
nvim
cvd
cd
clear
cd nvim
nvim
clear
cd nvim
cd
cd nvim
clear
nvim
clear
ls
cd .dotfiles/
ls
cd nushell/
ls
..
cd nvim
ls
..
cd kitty/
ls
ls -a
cd .config/
ls
..
clear
ls
cd wezterm/
ls
ls -a
mkdir .config
mkdir .config/wezterm
mv wezterm.lua .config/wezterm/wezterm.lua
cd
cd .config/
ls
rm wezterm/
rm -rf wezterm/
ls
rm wezterm
clear
cd 
cd .dotfiles/
ls
mkdir
mkdir wezterm
cd wezterm/
mkdir .config
cd ./.config/
mkdir wezterm
ls
clear
cd wezterm/
.dotfiles/install.sh
sudo .dotfiles/install.sh
clear
cd .config/
ls
ln -s ~/.dotfiles/wezterm/.config/wezterm/ wezterm
ls
clear
ls
cd wezterm/
ls
clear
nvim wezterm.lua
nvim
..
ls
clear
cd
cd .config/
ls
cd wezterm/
ls
clear
ls
clear
nvim wezterm.lua
..
ls
..
ls
..
ls
cd nvim
ls -a
cd .config/
ls
ls -a
cd nvim
ls
clear
cd
cd .config/
ls
cd nvim
ls
cd
cd .config/
cd wezterm/
clear
wezterm -h
wezterm -V
clear
nvim
cd go/
ls
mv junkie-juegos/ ~/workspace/go/junkie-juegos
clear
ls
clear
ls
cd
cd workspace/
cd go/
clear
cd microservices/
nvim
clear
nvim
clear
ls
nvim
nvim
clear
cd
nvim
clea
clear
cd .config/
ls
cd wezterm
ls
cd
ls -a
cd .dotfiles/
ls
cd wezterm/
ls
ls -a
cd .config/
ls
cd wezterm/
ls
clear
cd .config/wezterm/
nvim
ls
cd .config/wezterm/
ls
cd .config/wezterm/
clear
ls
nvim
nvim wezterm.lua
cd .config/wezterm/
nvim
clear
nvim
clear
ls
clear
cd
cd .dotfiles/
clear
ls
git add install.sh
git add wezterm/
git commit -m "addind configs for wezterm"
git add nvim/.config/nvim/lua/plugins/colorscheme.lua
git commit -m "changint nvim colorscheme to rose pine"
git push
clear
cd wezterm/.config/wezterm/
cd .config/wezterm/
clear
nvim wezterm.lua
nvim
nvim wezterm.lua
git add wezterm.lua
git commit -m "better window configuration for wezterm"
git push
clear
cd
cd neovim
cd nvim
vi
cd nushell
nvim
vim
clear
cd
cd nvim
vim
cd wezterm
cd
cd wezterm
cd .config/wezterm/
vim wezterm.lua
clear
cd nvim
nvim
nvim
cd
cd nvim
ls
cd .config/nvim/
clear
cd lua/
ls
cd plugins/
ls
clear
mkdir lsp
mv lsp_lazy.lua ./lsp/init.lua
nvim
clear
nvim
rm -rf lua/plugins/lsp/
clear
ls
clear
git status
git add .
git commit -m "making more changes to neovim"
git status
cd
cd .dotfiles/
clear
git status
git rm kitty/
git rm kitty -r
git status
git restore kitty/
clear
git status
ls
ls -a
nvim .gitignore
git status
git add nushell/
git add .gitignore
git commit -m "adding aliases"
git push
clear
cd nushell/
clear
cd
cd .config/nushell/
ls
git ignore history.txt
git status history.txt
cd
cd .dotfiles/
ls
clear
nvim .gitignore
git add .gitignore
git add nushell/
git status
git diff nushell/
cd
cd .dotfiles/
ls
git rm .gitignore
git add .gitignore
ls
git add nushell/
ls
clear
git status
git diff
git filter-branch --index-filter 'git rm --cached --ignore-unmatch history.txt' HEAD
git diff
